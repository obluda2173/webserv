Webserv Test Report - Mi 28. Mai 18:29:50 CEST 2025

===== Test: GET method =====
CURL Command: curl -s -i http://localhost:8080/
Response (exit code: 0):
HTTP/1.1 200 OK
Content-Type: text/html
Content-Language: en-US
Content-Length: 22044

<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="utf-8">
        <link rel="stylesheet" type="text/css" href="style.css">
        <title>webserv</title>
    </head>
    <body>
        <h1>42::WEBSERV</h1>
        <img class="main-image" src="assets/section.jpg" alt="cub3d1">
        <br>
        <div class="chapter">
            <details open>
                <summary class="summary">ABOUT</summary>
                <p>
                    Webserv is a lightweight HTTP server built from scratch, following the HTTP/1.1 standard. This project provided hands-on experience in socket programming, HTTP request parsing, and response generation. We implemented key features such as handling GET, POST, and DELETE methods, managing headers, serving static files, and executing CGI scripts for dynamic content. Using epoll(), we ensured efficient connection handling and scalability. Developing Webserv deepened our understanding of networking, concurrency, and performance optimization while reinforcing our ability to build robust and scalable server applications.
                </p>
            </details>
        </div>
        
        <div class="chapter">
            <details>
                <summary class="summary">TEAM</summary>
                <br>
                <p>
                    We are a team with diverse backgrounds in architecture, philosophy of science, and geology, bringing a unique blend of analytical thinking, creativity, and problem-solving to software development. Our varied expertise allows us to approach challenges from multiple perspectives, designing efficient, well-structured, and innovative solutions.
                </p>
                <br>
                <div class="team">
                    <div>
                        <h2>shuwang</h2>
                        <p>Former architect with a passion for coding and design. Enthusiastic about problem-solving, system architecture, and exploring the creative potential of technology. Constantly learning and building at the intersection of logic and creativity.</p>
                    </div>

                    <div>
                        <h2>yfan</h2>
                        <p>Grounded in geology and philosophy, driven by a deep passion for logic and systems. A sharp-minded student mastering low-level and high-level programming alike. Thinks like a theorist, builds like an engineer â€” always learning, always one step ahead.</p>
                    </div>

                </div>
            </details>
        </div>
        
        <div class="chapter">
            <details>
                <summary class="summary">CODING</summary>

                <br>
                <p>
                    Here are some student projects we developed at Ecole42, showcasing our hands-on experience, collaboration, and problem-solving skills. Our work covered system programming, web development, and computer graphics. Through these projects, we gained expertise in low-level programming, process management, networking, concurrency, and 3D rendering, allowing us to build robust and efficient software solutions.
                </p>
            
                <div class="container">

                    <div class="project-block">
                        <div>
                                <img src="assets/webserv.jpg" alt="Third Image">
                        </div>

                        <div class="text-container">
                        <h2>webserv(2025)</h2>
                        <p class="text-project">Cub3D is a 3D raycasting game engine that allows players to navigate through a 3D environment. It implements algorithms to render 3D scenes in a 2D space, similar to how older first-person games like Wolfenstein 3D worked.</p>
                        </div>
                    </div>

                    <div class="project-block">
                        <div>
                            <a href="https://github.com/swangarch/cub3d" target="_blank" rel="noopener noreferrer">
                                <img src="assets/1.png" alt="First Image">
                            </a>
                        </div>

                        <div class="text-container">
                        <h2>cub3d(2024)</h2>
                        <p class="text-project">Cub3D is a 3D raycasting game engine that allows players to navigate through a 3D environment. It implements algorithms to render 3D scenes in a 2D space, similar to how older first-person games like Wolfenstein 3D worked.</p>
                        </div>
                    </div>

                    <div class="project-block">
                        <div>
                            <a href="https://github.com/swangarch/cub3d" target="_blank" rel="noopener noreferrer">
                                <img src="assets/2.png" alt="Second Image">
                            </a>
                        </div>

                        <div class="text-container">
                        <h2>cub3d(2024)</h2>
                        <p class="text-project">Cub3D is a 3D raycasting game engine that allows players to navigate through a 3D environment. It implements algorithms to render 3D scenes in a 2D space, similar to how older first-person games like Wolfenstein 3D worked.</p>
                        </div>
                    </div>
                        
                    

                    <div class="project-block">
                        <div>
                            <a href="https://github.com/swangarch/minishell" target="_blank" rel="noopener noreferrer">
                                <img src="assets/minishell.jpg" alt="Fourth Image">
                            </a>
                        </div>
                        
                        <div class="text-container">
                        <h2>minishell(2024)</h2>
                        <p class="text-project">Minishell is a shell implementation project at Ecole42. It involves parsing user commands, handling built-in functions, and managing process execution, signals, and redirections, closely mimicking a real Unix shell.</p>
                        </div>
                    </div>

                    <div class="project-block">
                        <div>
                            <a href="https://github.com/swangarch/so_long" target="_blank" rel="noopener noreferrer">
                                <img src="assets/4.png" alt="Fourth Image">
                            </a>
                        </div>
                        
                        <div class="text-container">
                        <h2>so_long(2024)</h2>
                        <p class="text-project">SoLong is a graphical game project developed as part of the Ecole42 curriculum. It uses the MiniLibX library and focuses on implementing a 2D game environment where players can navigate through a maze.</p>
                        </div>
                    </div>

                    <div class="project-block">
                        <div>
                            <a href="https://github.com/swangarch/push_swap" target="_blank" rel="noopener noreferrer">
                                <img src="assets/push_swap.jpg" alt="Fourth Image">
                            </a>
                        </div>
                        
                        <div class="text-container">
                        <h2>push_swap(2024)</h2>
                        <p class="text-project">Push_swap is an algorithmic project from the Ecole42 curriculum. The goal is to sort a stack of numbers using a limited set of operations while optimizing for the least number of moves.</p>
                        </div>
                    </div>

                </div>
            </details>
        </div>
        
        <div class="chapter">
            <details>
                <summary class="summary">SERVER</summary>
                <br>

                <p>
                    Our webserv tester is a dedicated platform for testing and evaluating the functionality of the Webserv HTTP server. It provides a simple environment to simulate different web requests, test server responses, and ensure the proper handling of various HTTP methods and features. The site helps verify the server's performance, scalability, and accuracy, offering an easy way to validate and troubleshoot server configurations.
                </p>

                <h2 style="color: #cd763c; font-weight: bold;">GET method.</h2>

                <form action="/" method="GET">
                    <h2>Go to /, return index.<br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Go</button>
                    </div>
                </form>

                <br>

                <form action="/data/" method="GET">
                    <h2>Go to /data, return autoindex.<br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Go</button>
                    </div>
                </form>

                <br>

                <form action="/assets/" method="GET">
                    <h2>Go to /assets, autoindex not allowed return 403.<br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Go</button>
                    </div>
                </form>

                <br>

                <form action="/notexist" method="GET">
                    <h2>Go to /notexist, return 404.<br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Go</button>
                    </div>
                </form>

                <br>

                <form action="/assets/notexist" method="GET">
                    <h2>Go to /assets/notexist, return default error 404.<br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Go</button>
                    </div>
                </form>

                <br>

                <form action="/getnotallowed" method="GET">
                    <h2>Go to /getnotallowed, return default error 405.<br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Go</button>
                    </div>
                </form>

                <br>

                <h2 style="color: #cd763c; font-weight: bold;">POST method.</h2>
                <form action="/upload" method="POST" enctype="multipart/form-data">
                    <h2>Upload a file, POST method (built-in).<br><br></h2>
                    <div class="form-row">
                        <label for="uploadfile1">File:</label>
                        <input type="file" id="uploadfile1" name="file1" required>
                    </div>
                    <div class="form-row button-row">
                        <button type="submit">Submit</button>
                    </div>
                </form>

                <br>
                <h2 style="color: #cd763c; font-weight: bold;">DELETE method.</h2>
                <form>
                    <h2>Delete file or directory, DELETE method (built-in).</h2>
                    <div class="form-row">
                        <input type="text" id="fileDeleteNew" placeholder="File to delete">
                    </div>
                    
                    <div class="form-row button-row">
                        <button type="button" onclick="deleteFile()">Delete</button>
                        <script src = deleterequest.js></script>
                    </div>
                </form>

                <br>

                <h2 style="color: #cd763c; font-weight: bold;">Redirection.</h2>

                <form action="/redir" method="GET">
                    <h2>Redirection /redir -> /data with autoIndex.<br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Go</button>
                    </div>
                </form>

                <br>

                <form action="/redirexample" method="GET">
                    <h2>Redirection /redirexample -> example.com.<br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Go</button>
                    </div>
                </form>

                <br>
                
            </details>
        </div>

        <div class="chapter">
            <details>
                <summary class="summary">CGI</summary>
                <br>
                <h2 style="color: #cd763c; font-weight: bold;">Python CGI.</h2>
                <form action="/cgi/python/comment.py" method="GET">
                    <h2>Leave a comment, GET method (python CGI).<br><br></h2>
                    <div class="form-row">
                        <label for="name">Name:</label>
                        <input type="text" id="name" name="name" required>
                        <label for="email">Email:</label>
                        <input type="email" id="email" name="email" required>
                    </div>
                    <div class="form-row">
                        <label for="comment">Comment:</label>
                        <input id="comment" name="comment" required>
                    </div>
                    <div class="form-row button-row">
                        <button type="submit">Submit</button>
                    </div>
                </form>

                <br>

                <form action="/cgi/python/show_comment.py" method="GET">
                    <h2>Show all comments, GET method (python CGI).<br><br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Show</button>
                    </div>
                </form>

                <br>

                <form action="/cgi/python/upload.py" method="POST" enctype="multipart/form-data">
                    <h2>Upload a file, POST method (python CGI).<br><br></h2>
                    <div class="form-row">

                        <label for="uploadfile">File:</label>
                        <input type="file" id="uploadfile" name="file" required>
                    </div>
                    <div class="form-row button-row">
                        <button type="submit">Submit</button>
                    </div>
                </form>

                <br>

                <form>
                    <h2>Delete datas, DELETE method (python CGI).</h2>
                    <div class="form-row">
                        <button type="button" onclick="sendDeleteRequest('comments')">Delete comments</button>
                        <button type="button" onclick="sendDeleteRequest('files')">Delete files</button>
                        <button type="button" onclick="sendDeleteRequest('all')">Delete all data</button>
                    </div>
                </form>
                
                <script>
                    function sendDeleteRequest(fileType) {
                        fetch(`/cgi/python/delete.py?files=${fileType}`, {
                            method: 'DELETE'
                        }).then(response => {
                            if (response.ok) {
                                alert(`Successfully deleted: ${fileType}`);
                            } else {
                                alert('Error deleting data');
                            }
                        }).catch(error => {
                            console.error('Error:', error);
                        });
                    }
                </script>

                <br>
                <h2 style="color: #cd763c; font-weight: bold;">Php CGI.</h2>

                <form action="/cgi/php/echo.php" method="POST">
                    <h2>Test CGI, show what you enter, POST method (Php CGI).<br><br></h2>
                    <div class="form-row">
                        <label for="content">Content:</label>
                        <input type="text" id="content" name="content" required>
                    </div> 
                    <div class="form-row button-row">
                        <button type="submit">Submit</button>
                    </div>
                </form>

                <br>

                <form action="/cgi/php/game.php" method="POST">
                    <h2>Play a game, enter your choice between 'rock' 'paper' 'scissors' (Php CGI).<br><br></h2>
                    <div class="form-row">
                        <label for="content">Choice:</label>
                        <input type="text" id="content" name="content" required>
                    </div> 
                    <div class="form-row button-row">
                        <button type="submit">Submit</button>
                    </div>
                </form>

                <br>

                

                <h2 style="color: #cd763c; font-weight: bold;">CGI error handle.</h2>

                <br>

                <form action="/cgi/python/inf.py" method="POST">
                    <h2>Infinite CGI, POST method (python CGI).<br><br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Run</button>
                    </div>
                </form>

                <br>

                <form action="/cgi/python/error.py" method="POST">
                    <h2>CGI script contains error, POST method (python CGI).<br><br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Run</button>
                    </div>
                </form>

                <br>

                <form action="/cgi/python/crash.py" method="POST">
                    <h2>CGI script contains crash, POST method (python CGI).<br><br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Run</button>
                    </div>
                </form>

                <br>

                <form action="/cgi/python/empty.py" method="POST">
                    <h2>CGI script returns noting, POST method (python CGI).<br><br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Run</button>
                    </div>
                </form>

                <br>

                <form action="/cgi/php/wrongCgiNoContentType.php" method="POST">
                    <h2>Wrong CGI, no content type, POST method (php CGI).<br><br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Run</button>
                    </div>
                </form>

                <br>

                <form action="/cgi/php/wrongCgiInvalidHead.php" method="POST">
                    <h2>Wrong CGI, invalid head, POST method (php CGI).<br><br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Run</button>
                    </div>
                </form>

                <br>
                
            </details>
        </div>


        <div class="chapter">
            <details>
                <summary class="summary">COOKIE</summary>
                <br>
                <form action="/cgi/python/login.py" method="POST">
                    <h2>Login and set cookie.<br><br></h2>
                    <div class="form-row">
                        <label for="user">User:</label>
                        <input type="text" id="user" name="user" required>
                        <label for="password">Password:</label>
                        <input type="password" id="password" name="password" required>
                    </div>
                    <div class="form-row button-row">
                        <button type="submit">Submit</button>
                    </div>
                </form>

                <br>

                <form action="/cgi/python/loginCheck.py" method="GET">
                    <h2>Login cookie and session check.<br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Check</button>
                    </div>
                </form>

                <br>

                <form action="/cgi/python/userinfo.py" method="GET">
                    <h2>Input something, will be saved in your session.<br></h2>
                    <div class="form-row">
                        <label for="userinfo">Userinfo:</label>
                            <input type="text" id="userinfo" name="userinfo" required>
                    </div>
                    <div class="form-row button-row">
                        <button type="submit">submit</button>
                    </div>
                </form>

                <br>

                <form action="/cgi/python/logout.py" method="GET">
                    <h2>Log out and unset your cookie.<br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Log out</button>
                    </div>
                </form>
                
            </details>
        </div>

        <div class="chapter">
            <details>
                <summary class="summary">CONTACT</summary>

                <div class="contact-section">
                    <p>Copyright Notice
                    All content on this website, including but not limited to text, images, audio, video, and other materials, is owned by yfan and shuwang is protected by copyright law. No part of this website may be reproduced, modified, distributed, or used for commercial purposes without prior authorization.<br> 
                    If you wish to use any content from this site, please contact us.<br>
                    <br>
                    Contact Information<br>
                    Email:  yfan@student.42.fr shuwang@student.42.fr<br></p>
                </div>
            </details>
        </div>

    </body>
</html>

===== Test: GET method fail =====
CURL Command: curl -s -i http://localhost:8080/assets
Response (exit code: 0):
HTTP/1.1 403 Forbidden
Content-Type: text/plain
Content-Language: en-US
Content-Length: 0


===== Test: PUT method =====
CURL Command: curl -s -i -X PUT http://localhost:8080/putfile
Response (exit code: 0):
HTTP/1.1 501 Not Implemented
Content-Type: text/plain
Content-Language: en-US
Content-Length: 0


===== Test: POST chunked upload (.txt file) =====
CURL Command: curl -s -i -X POST -H Content-Type: text/plain -H Transfer-Encoding: chunked --data-binary @/home/kfreyer/workspace/webserv/kay_test/fileToUpload.txt http://localhost:8080/upload
Response (exit code: 0):
HTTP/1.1 201 Created
Content-Type: text/plain
Content-Language: en-US
Content-Length: 15

Created /upload

===== Test: Same ip and port, different servername: webserv.com =====
CURL Command: curl -s -i http://localhost:8080/ -H Host: webserv.com
Response (exit code: 0):
HTTP/1.1 200 OK
Content-Type: text/html
Content-Language: en-US
Content-Length: 22044

<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="utf-8">
        <link rel="stylesheet" type="text/css" href="style.css">
        <title>webserv</title>
    </head>
    <body>
        <h1>42::WEBSERV</h1>
        <img class="main-image" src="assets/section.jpg" alt="cub3d1">
        <br>
        <div class="chapter">
            <details open>
                <summary class="summary">ABOUT</summary>
                <p>
                    Webserv is a lightweight HTTP server built from scratch, following the HTTP/1.1 standard. This project provided hands-on experience in socket programming, HTTP request parsing, and response generation. We implemented key features such as handling GET, POST, and DELETE methods, managing headers, serving static files, and executing CGI scripts for dynamic content. Using epoll(), we ensured efficient connection handling and scalability. Developing Webserv deepened our understanding of networking, concurrency, and performance optimization while reinforcing our ability to build robust and scalable server applications.
                </p>
            </details>
        </div>
        
        <div class="chapter">
            <details>
                <summary class="summary">TEAM</summary>
                <br>
                <p>
                    We are a team with diverse backgrounds in architecture, philosophy of science, and geology, bringing a unique blend of analytical thinking, creativity, and problem-solving to software development. Our varied expertise allows us to approach challenges from multiple perspectives, designing efficient, well-structured, and innovative solutions.
                </p>
                <br>
                <div class="team">
                    <div>
                        <h2>shuwang</h2>
                        <p>Former architect with a passion for coding and design. Enthusiastic about problem-solving, system architecture, and exploring the creative potential of technology. Constantly learning and building at the intersection of logic and creativity.</p>
                    </div>

                    <div>
                        <h2>yfan</h2>
                        <p>Grounded in geology and philosophy, driven by a deep passion for logic and systems. A sharp-minded student mastering low-level and high-level programming alike. Thinks like a theorist, builds like an engineer â€” always learning, always one step ahead.</p>
                    </div>

                </div>
            </details>
        </div>
        
        <div class="chapter">
            <details>
                <summary class="summary">CODING</summary>

                <br>
                <p>
                    Here are some student projects we developed at Ecole42, showcasing our hands-on experience, collaboration, and problem-solving skills. Our work covered system programming, web development, and computer graphics. Through these projects, we gained expertise in low-level programming, process management, networking, concurrency, and 3D rendering, allowing us to build robust and efficient software solutions.
                </p>
            
                <div class="container">

                    <div class="project-block">
                        <div>
                                <img src="assets/webserv.jpg" alt="Third Image">
                        </div>

                        <div class="text-container">
                        <h2>webserv(2025)</h2>
                        <p class="text-project">Cub3D is a 3D raycasting game engine that allows players to navigate through a 3D environment. It implements algorithms to render 3D scenes in a 2D space, similar to how older first-person games like Wolfenstein 3D worked.</p>
                        </div>
                    </div>

                    <div class="project-block">
                        <div>
                            <a href="https://github.com/swangarch/cub3d" target="_blank" rel="noopener noreferrer">
                                <img src="assets/1.png" alt="First Image">
                            </a>
                        </div>

                        <div class="text-container">
                        <h2>cub3d(2024)</h2>
                        <p class="text-project">Cub3D is a 3D raycasting game engine that allows players to navigate through a 3D environment. It implements algorithms to render 3D scenes in a 2D space, similar to how older first-person games like Wolfenstein 3D worked.</p>
                        </div>
                    </div>

                    <div class="project-block">
                        <div>
                            <a href="https://github.com/swangarch/cub3d" target="_blank" rel="noopener noreferrer">
                                <img src="assets/2.png" alt="Second Image">
                            </a>
                        </div>

                        <div class="text-container">
                        <h2>cub3d(2024)</h2>
                        <p class="text-project">Cub3D is a 3D raycasting game engine that allows players to navigate through a 3D environment. It implements algorithms to render 3D scenes in a 2D space, similar to how older first-person games like Wolfenstein 3D worked.</p>
                        </div>
                    </div>
                        
                    

                    <div class="project-block">
                        <div>
                            <a href="https://github.com/swangarch/minishell" target="_blank" rel="noopener noreferrer">
                                <img src="assets/minishell.jpg" alt="Fourth Image">
                            </a>
                        </div>
                        
                        <div class="text-container">
                        <h2>minishell(2024)</h2>
                        <p class="text-project">Minishell is a shell implementation project at Ecole42. It involves parsing user commands, handling built-in functions, and managing process execution, signals, and redirections, closely mimicking a real Unix shell.</p>
                        </div>
                    </div>

                    <div class="project-block">
                        <div>
                            <a href="https://github.com/swangarch/so_long" target="_blank" rel="noopener noreferrer">
                                <img src="assets/4.png" alt="Fourth Image">
                            </a>
                        </div>
                        
                        <div class="text-container">
                        <h2>so_long(2024)</h2>
                        <p class="text-project">SoLong is a graphical game project developed as part of the Ecole42 curriculum. It uses the MiniLibX library and focuses on implementing a 2D game environment where players can navigate through a maze.</p>
                        </div>
                    </div>

                    <div class="project-block">
                        <div>
                            <a href="https://github.com/swangarch/push_swap" target="_blank" rel="noopener noreferrer">
                                <img src="assets/push_swap.jpg" alt="Fourth Image">
                            </a>
                        </div>
                        
                        <div class="text-container">
                        <h2>push_swap(2024)</h2>
                        <p class="text-project">Push_swap is an algorithmic project from the Ecole42 curriculum. The goal is to sort a stack of numbers using a limited set of operations while optimizing for the least number of moves.</p>
                        </div>
                    </div>

                </div>
            </details>
        </div>
        
        <div class="chapter">
            <details>
                <summary class="summary">SERVER</summary>
                <br>

                <p>
                    Our webserv tester is a dedicated platform for testing and evaluating the functionality of the Webserv HTTP server. It provides a simple environment to simulate different web requests, test server responses, and ensure the proper handling of various HTTP methods and features. The site helps verify the server's performance, scalability, and accuracy, offering an easy way to validate and troubleshoot server configurations.
                </p>

                <h2 style="color: #cd763c; font-weight: bold;">GET method.</h2>

                <form action="/" method="GET">
                    <h2>Go to /, return index.<br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Go</button>
                    </div>
                </form>

                <br>

                <form action="/data/" method="GET">
                    <h2>Go to /data, return autoindex.<br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Go</button>
                    </div>
                </form>

                <br>

                <form action="/assets/" method="GET">
                    <h2>Go to /assets, autoindex not allowed return 403.<br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Go</button>
                    </div>
                </form>

                <br>

                <form action="/notexist" method="GET">
                    <h2>Go to /notexist, return 404.<br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Go</button>
                    </div>
                </form>

                <br>

                <form action="/assets/notexist" method="GET">
                    <h2>Go to /assets/notexist, return default error 404.<br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Go</button>
                    </div>
                </form>

                <br>

                <form action="/getnotallowed" method="GET">
                    <h2>Go to /getnotallowed, return default error 405.<br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Go</button>
                    </div>
                </form>

                <br>

                <h2 style="color: #cd763c; font-weight: bold;">POST method.</h2>
                <form action="/upload" method="POST" enctype="multipart/form-data">
                    <h2>Upload a file, POST method (built-in).<br><br></h2>
                    <div class="form-row">
                        <label for="uploadfile1">File:</label>
                        <input type="file" id="uploadfile1" name="file1" required>
                    </div>
                    <div class="form-row button-row">
                        <button type="submit">Submit</button>
                    </div>
                </form>

                <br>
                <h2 style="color: #cd763c; font-weight: bold;">DELETE method.</h2>
                <form>
                    <h2>Delete file or directory, DELETE method (built-in).</h2>
                    <div class="form-row">
                        <input type="text" id="fileDeleteNew" placeholder="File to delete">
                    </div>
                    
                    <div class="form-row button-row">
                        <button type="button" onclick="deleteFile()">Delete</button>
                        <script src = deleterequest.js></script>
                    </div>
                </form>

                <br>

                <h2 style="color: #cd763c; font-weight: bold;">Redirection.</h2>

                <form action="/redir" method="GET">
                    <h2>Redirection /redir -> /data with autoIndex.<br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Go</button>
                    </div>
                </form>

                <br>

                <form action="/redirexample" method="GET">
                    <h2>Redirection /redirexample -> example.com.<br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Go</button>
                    </div>
                </form>

                <br>
                
            </details>
        </div>

        <div class="chapter">
            <details>
                <summary class="summary">CGI</summary>
                <br>
                <h2 style="color: #cd763c; font-weight: bold;">Python CGI.</h2>
                <form action="/cgi/python/comment.py" method="GET">
                    <h2>Leave a comment, GET method (python CGI).<br><br></h2>
                    <div class="form-row">
                        <label for="name">Name:</label>
                        <input type="text" id="name" name="name" required>
                        <label for="email">Email:</label>
                        <input type="email" id="email" name="email" required>
                    </div>
                    <div class="form-row">
                        <label for="comment">Comment:</label>
                        <input id="comment" name="comment" required>
                    </div>
                    <div class="form-row button-row">
                        <button type="submit">Submit</button>
                    </div>
                </form>

                <br>

                <form action="/cgi/python/show_comment.py" method="GET">
                    <h2>Show all comments, GET method (python CGI).<br><br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Show</button>
                    </div>
                </form>

                <br>

                <form action="/cgi/python/upload.py" method="POST" enctype="multipart/form-data">
                    <h2>Upload a file, POST method (python CGI).<br><br></h2>
                    <div class="form-row">

                        <label for="uploadfile">File:</label>
                        <input type="file" id="uploadfile" name="file" required>
                    </div>
                    <div class="form-row button-row">
                        <button type="submit">Submit</button>
                    </div>
                </form>

                <br>

                <form>
                    <h2>Delete datas, DELETE method (python CGI).</h2>
                    <div class="form-row">
                        <button type="button" onclick="sendDeleteRequest('comments')">Delete comments</button>
                        <button type="button" onclick="sendDeleteRequest('files')">Delete files</button>
                        <button type="button" onclick="sendDeleteRequest('all')">Delete all data</button>
                    </div>
                </form>
                
                <script>
                    function sendDeleteRequest(fileType) {
                        fetch(`/cgi/python/delete.py?files=${fileType}`, {
                            method: 'DELETE'
                        }).then(response => {
                            if (response.ok) {
                                alert(`Successfully deleted: ${fileType}`);
                            } else {
                                alert('Error deleting data');
                            }
                        }).catch(error => {
                            console.error('Error:', error);
                        });
                    }
                </script>

                <br>
                <h2 style="color: #cd763c; font-weight: bold;">Php CGI.</h2>

                <form action="/cgi/php/echo.php" method="POST">
                    <h2>Test CGI, show what you enter, POST method (Php CGI).<br><br></h2>
                    <div class="form-row">
                        <label for="content">Content:</label>
                        <input type="text" id="content" name="content" required>
                    </div> 
                    <div class="form-row button-row">
                        <button type="submit">Submit</button>
                    </div>
                </form>

                <br>

                <form action="/cgi/php/game.php" method="POST">
                    <h2>Play a game, enter your choice between 'rock' 'paper' 'scissors' (Php CGI).<br><br></h2>
                    <div class="form-row">
                        <label for="content">Choice:</label>
                        <input type="text" id="content" name="content" required>
                    </div> 
                    <div class="form-row button-row">
                        <button type="submit">Submit</button>
                    </div>
                </form>

                <br>

                

                <h2 style="color: #cd763c; font-weight: bold;">CGI error handle.</h2>

                <br>

                <form action="/cgi/python/inf.py" method="POST">
                    <h2>Infinite CGI, POST method (python CGI).<br><br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Run</button>
                    </div>
                </form>

                <br>

                <form action="/cgi/python/error.py" method="POST">
                    <h2>CGI script contains error, POST method (python CGI).<br><br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Run</button>
                    </div>
                </form>

                <br>

                <form action="/cgi/python/crash.py" method="POST">
                    <h2>CGI script contains crash, POST method (python CGI).<br><br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Run</button>
                    </div>
                </form>

                <br>

                <form action="/cgi/python/empty.py" method="POST">
                    <h2>CGI script returns noting, POST method (python CGI).<br><br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Run</button>
                    </div>
                </form>

                <br>

                <form action="/cgi/php/wrongCgiNoContentType.php" method="POST">
                    <h2>Wrong CGI, no content type, POST method (php CGI).<br><br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Run</button>
                    </div>
                </form>

                <br>

                <form action="/cgi/php/wrongCgiInvalidHead.php" method="POST">
                    <h2>Wrong CGI, invalid head, POST method (php CGI).<br><br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Run</button>
                    </div>
                </form>

                <br>
                
            </details>
        </div>


        <div class="chapter">
            <details>
                <summary class="summary">COOKIE</summary>
                <br>
                <form action="/cgi/python/login.py" method="POST">
                    <h2>Login and set cookie.<br><br></h2>
                    <div class="form-row">
                        <label for="user">User:</label>
                        <input type="text" id="user" name="user" required>
                        <label for="password">Password:</label>
                        <input type="password" id="password" name="password" required>
                    </div>
                    <div class="form-row button-row">
                        <button type="submit">Submit</button>
                    </div>
                </form>

                <br>

                <form action="/cgi/python/loginCheck.py" method="GET">
                    <h2>Login cookie and session check.<br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Check</button>
                    </div>
                </form>

                <br>

                <form action="/cgi/python/userinfo.py" method="GET">
                    <h2>Input something, will be saved in your session.<br></h2>
                    <div class="form-row">
                        <label for="userinfo">Userinfo:</label>
                            <input type="text" id="userinfo" name="userinfo" required>
                    </div>
                    <div class="form-row button-row">
                        <button type="submit">submit</button>
                    </div>
                </form>

                <br>

                <form action="/cgi/python/logout.py" method="GET">
                    <h2>Log out and unset your cookie.<br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Log out</button>
                    </div>
                </form>
                
            </details>
        </div>

        <div class="chapter">
            <details>
                <summary class="summary">CONTACT</summary>

                <div class="contact-section">
                    <p>Copyright Notice
                    All content on this website, including but not limited to text, images, audio, video, and other materials, is owned by yfan and shuwang is protected by copyright law. No part of this website may be reproduced, modified, distributed, or used for commercial purposes without prior authorization.<br> 
                    If you wish to use any content from this site, please contact us.<br>
                    <br>
                    Contact Information<br>
                    Email:  yfan@student.42.fr shuwang@student.42.fr<br></p>
                </div>
            </details>
        </div>

    </body>
</html>

===== Test: Same ip and port, different servername: portfolio.com =====
CURL Command: curl -s -i http://localhost:8080/ -H Host: portfolio.com
Response (exit code: 0):
HTTP/1.1 200 OK
Content-Type: text/html
Content-Language: en-US
Content-Length: 260

<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="utf-8">
        <link rel="stylesheet" type="text/css" href="style.css">
        <title>emptypage</title>
    </head>
    <body>
        <h1>portfolio.com</h1>
        <br>
    </body>
</html>

===== Test: Same ip and port, different servername: portfolio.com:8080 =====
CURL Command: curl -s -i http://localhost:8080/ -H Host: portfolio.com:8080
Response (exit code: 0):
HTTP/1.1 200 OK
Content-Type: text/html
Content-Language: en-US
Content-Length: 260

<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="utf-8">
        <link rel="stylesheet" type="text/css" href="style.css">
        <title>emptypage</title>
    </head>
    <body>
        <h1>portfolio.com</h1>
        <br>
    </body>
</html>

===== Test: Missing Host Header =====
Raw request sent:
GET / HTTP/1.1


Response received:
HTTP/1.1 400 Bad Request
Content-Length: 0


===== Test: Illegal HTTP Method =====
Raw request sent:
FORK / HTTP/1.1
Host: localhost


Response received:
HTTP/1.1 501 Not Implemented
Content-Type: text/plain
Content-Language: en-US
Content-Length: 0


===== Test: Bad HTTP Version =====
Raw request sent:
GET / HTTP/2.0
Host: localhost


Response received:
HTTP/1.1 505 HTTP Version Not Supported
Content-Type: text/plain
Content-Language: en-US
Content-Length: 0


===== Test: Bad HTTP Version =====
Raw request sent:
GET / HTTP/0.9
Host: localhost


Response received:
HTTP/1.1 505 HTTP Version Not Supported
Content-Type: text/plain
Content-Language: en-US
Content-Length: 0


===== Test: Missing CRLF =====
Raw request sent:
GET / HTTP/1.1Host: localhost


Response received:
HTTP/1.1 400 Bad Request
Content-Length: 0


===== Test: Garbage Request =====
Raw request sent:
ðŸ˜ˆðŸ˜ˆðŸ˜ˆðŸ˜ˆðŸ˜ˆðŸ˜ˆ


Response received:
HTTP/1.1 400 Bad Request
Content-Length: 0


===== Test: bad request uri . =====
Raw request sent:
GET . HTTP/1.1
Host: localhost

Response received:
HTTP/1.1 400 Bad Request
Content-Type: text/plain
Content-Language: en-US
Content-Length: 0


===== Test: bad request uri not start with / =====
Raw request sent:
GET index.html HTTP/1.1
Host: localhost

Response received:
HTTP/1.1 400 Bad Request
Content-Type: text/plain
Content-Language: en-US
Content-Length: 0


===== Test: bad HTTP first line =====
Raw request sent:
GET POST / HTTP/1.1
Host: localhost

Response received:
HTTP/1.1 400 Bad Request
Content-Length: 0


===== Test: HTTP full url without port =====
Raw request sent:
GET http://localhost/ HTTP/1.1
Host: localhost

Response received:
HTTP/1.1 200 OK
Content-Type: text/html
Content-Language: en-US
Content-Length: 22044

<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="utf-8">
        <link rel="stylesheet" type="text/css" href="style.css">
        <title>webserv</title>
    </head>
    <body>
        <h1>42::WEBSERV</h1>
        <img class="main-image" src="assets/section.jpg" alt="cub3d1">
        <br>
        <div class="chapter">
            <details open>
                <summary class="summary">ABOUT</summary>
                <p>
                    Webserv is a lightweight HTTP server built from scratch, following the HTTP/1.1 standard. This project provided hands-on experience in socket programming, HTTP request parsing, and response generation. We implemented key features such as handling GET, POST, and DELETE methods, managing headers, serving static files, and executing CGI scripts for dynamic content. Using epoll(), we ensured efficient connection handling and scalability. Developing Webserv deepened our understanding of networking, concurrency, and performance optimization while reinforcing our ability to build robust and scalable server applications.
                </p>
            </details>
        </div>
        
        <div class="chapter">
            <details>
                <summary class="summary">TEAM</summary>
                <br>
                <p>
                    We are a team with diverse backgrounds in architecture, philosophy of science, and geology, bringing a unique blend of analytical thinking, creativity, and problem-solving to software development. Our varied expertise allows us to approach challenges from multiple perspectives, designing efficient, well-structured, and innovative solutions.
                </p>
                <br>
                <div class="team">
                    <div>
                        <h2>shuwang</h2>
                        <p>Former architect with a passion for coding and design. Enthusiastic about problem-solving, system architecture, and exploring the creative potential of technology. Constantly learning and building at the intersection of logic and creativity.</p>
                    </div>

                    <div>
                        <h2>yfan</h2>
                        <p>Grounded in geology and philosophy, driven by a deep passion for logic and systems. A sharp-minded student mastering low-level and high-level programming alike. Thinks like a theorist, builds like an engineer â€” always learning, always one step ahead.</p>
                    </div>

                </div>
            </details>
        </div>
        
        <div class="chapter">
            <details>
                <summary class="summary">CODING</summary>

                <br>
                <p>
                    Here are some student projects we developed at Ecole42, showcasing our hands-on experience, collaboration, and problem-solving skills. Our work covered system programming, web development, and computer graphics. Through these projects, we gained expertise in low-level programming, process management, networking, concurrency, and 3D rendering, allowing us to build robust and efficient software solutions.
                </p>
            
                <div class="container">

                    <div class="project-block">
                        <div>
                                <img src="assets/webserv.jpg" alt="Third Image">
                        </div>

                        <div class="text-container">
                        <h2>webserv(2025)</h2>
                        <p class="text-project">Cub3D is a 3D raycasting game engine that allows players to navigate through a 3D environment. It implements algorithms to render 3D scenes in a 2D space, similar to how older first-person games like Wolfenstein 3D worked.</p>
                        </div>
                    </div>

                    <div class="project-block">
                        <div>
                            <a href="https://github.com/swangarch/cub3d" target="_blank" rel="noopener noreferrer">
                                <img src="assets/1.png" alt="First Image">
                            </a>
                        </div>

                        <div class="text-container">
                        <h2>cub3d(2024)</h2>
                        <p class="text-project">Cub3D is a 3D raycasting game engine that allows players to navigate through a 3D environment. It implements algorithms to render 3D scenes in a 2D space, similar to how older first-person games like Wolfenstein 3D worked.</p>
                        </div>
                    </div>

                    <div class="project-block">
                        <div>
                            <a href="https://github.com/swangarch/cub3d" target="_blank" rel="noopener noreferrer">
                                <img src="assets/2.png" alt="Second Image">
                            </a>
                        </div>

                        <div class="text-container">
                        <h2>cub3d(2024)</h2>
                        <p class="text-project">Cub3D is a 3D raycasting game engine that allows players to navigate through a 3D environment. It implements algorithms to render 3D scenes in a 2D space, similar to how older first-person games like Wolfenstein 3D worked.</p>
                        </div>
                    </div>
                        
                    

                    <div class="project-block">
                        <div>
                            <a href="https://github.com/swangarch/minishell" target="_blank" rel="noopener noreferrer">
                                <img src="assets/minishell.jpg" alt="Fourth Image">
                            </a>
                        </div>
                        
                        <div class="text-container">
                        <h2>minishell(2024)</h2>
                        <p class="text-project">Minishell is a shell implementation project at Ecole42. It involves parsing user commands, handling built-in functions, and managing process execution, signals, and redirections, closely mimicking a real Unix shell.</p>
                        </div>
                    </div>

                    <div class="project-block">
                        <div>
                            <a href="https://github.com/swangarch/so_long" target="_blank" rel="noopener noreferrer">
                                <img src="assets/4.png" alt="Fourth Image">
                            </a>
                        </div>
                        
                        <div class="text-container">
                        <h2>so_long(2024)</h2>
                        <p class="text-project">SoLong is a graphical game project developed as part of the Ecole42 curriculum. It uses the MiniLibX library and focuses on implementing a 2D game environment where players can navigate through a maze.</p>
                        </div>
                    </div>

                    <div class="project-block">
                        <div>
                            <a href="https://github.com/swangarch/push_swap" target="_blank" rel="noopener noreferrer">
                                <img src="assets/push_swap.jpg" alt="Fourth Image">
                            </a>
                        </div>
                        
                        <div class="text-container">
                        <h2>push_swap(2024)</h2>
                        <p class="text-project">Push_swap is an algorithmic project from the Ecole42 curriculum. The goal is to sort a stack of numbers using a limited set of operations while optimizing for the least number of moves.</p>
                        </div>
                    </div>

                </div>
            </details>
        </div>
        
        <div class="chapter">
            <details>
                <summary class="summary">SERVER</summary>
                <br>

                <p>
                    Our webserv tester is a dedicated platform for testing and evaluating the functionality of the Webserv HTTP server. It provides a simple environment to simulate different web requests, test server responses, and ensure the proper handling of various HTTP methods and features. The site helps verify the server's performance, scalability, and accuracy, offering an easy way to validate and troubleshoot server configurations.
                </p>

                <h2 style="color: #cd763c; font-weight: bold;">GET method.</h2>

                <form action="/" method="GET">
                    <h2>Go to /, return index.<br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Go</button>
                    </div>
                </form>

                <br>

                <form action="/data/" method="GET">
                    <h2>Go to /data, return autoindex.<br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Go</button>
                    </div>
                </form>

                <br>

                <form action="/assets/" method="GET">
                    <h2>Go to /assets, autoindex not allowed return 403.<br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Go</button>
                    </div>
                </form>

                <br>

                <form action="/notexist" method="GET">
                    <h2>Go to /notexist, return 404.<br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Go</button>
                    </div>
                </form>

                <br>

                <form action="/assets/notexist" method="GET">
                    <h2>Go to /assets/notexist, return default error 404.<br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Go</button>
                    </div>
                </form>

                <br>

                <form action="/getnotallowed" method="GET">
                    <h2>Go to /getnotallowed, return default error 405.<br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Go</button>
                    </div>
                </form>

                <br>

                <h2 style="color: #cd763c; font-weight: bold;">POST method.</h2>
                <form action="/upload" method="POST" enctype="multipart/form-data">
                    <h2>Upload a file, POST method (built-in).<br><br></h2>
                    <div class="form-row">
                        <label for="uploadfile1">File:</label>
                        <input type="file" id="uploadfile1" name="file1" required>
                    </div>
                    <div class="form-row button-row">
                        <button type="submit">Submit</button>
                    </div>
                </form>

                <br>
                <h2 style="color: #cd763c; font-weight: bold;">DELETE method.</h2>
                <form>
                    <h2>Delete file or directory, DELETE method (built-in).</h2>
                    <div class="form-row">
                        <input type="text" id="fileDeleteNew" placeholder="File to delete">
                    </div>
                    
                    <div class="form-row button-row">
                        <button type="button" onclick="deleteFile()">Delete</button>
                        <script src = deleterequest.js></script>
                    </div>
                </form>

                <br>

                <h2 style="color: #cd763c; font-weight: bold;">Redirection.</h2>

                <form action="/redir" method="GET">
                    <h2>Redirection /redir -> /data with autoIndex.<br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Go</button>
                    </div>
                </form>

                <br>

                <form action="/redirexample" method="GET">
                    <h2>Redirection /redirexample -> example.com.<br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Go</button>
                    </div>
                </form>

                <br>
                
            </details>
        </div>

        <div class="chapter">
            <details>
                <summary class="summary">CGI</summary>
                <br>
                <h2 style="color: #cd763c; font-weight: bold;">Python CGI.</h2>
                <form action="/cgi/python/comment.py" method="GET">
                    <h2>Leave a comment, GET method (python CGI).<br><br></h2>
                    <div class="form-row">
                        <label for="name">Name:</label>
                        <input type="text" id="name" name="name" required>
                        <label for="email">Email:</label>
                        <input type="email" id="email" name="email" required>
                    </div>
                    <div class="form-row">
                        <label for="comment">Comment:</label>
                        <input id="comment" name="comment" required>
                    </div>
                    <div class="form-row button-row">
                        <button type="submit">Submit</button>
                    </div>
                </form>

                <br>

                <form action="/cgi/python/show_comment.py" method="GET">
                    <h2>Show all comments, GET method (python CGI).<br><br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Show</button>
                    </div>
                </form>

                <br>

                <form action="/cgi/python/upload.py" method="POST" enctype="multipart/form-data">
                    <h2>Upload a file, POST method (python CGI).<br><br></h2>
                    <div class="form-row">

                        <label for="uploadfile">File:</label>
                        <input type="file" id="uploadfile" name="file" required>
                    </div>
                    <div class="form-row button-row">
                        <button type="submit">Submit</button>
                    </div>
                </form>

                <br>

                <form>
                    <h2>Delete datas, DELETE method (python CGI).</h2>
                    <div class="form-row">
                        <button type="button" onclick="sendDeleteRequest('comments')">Delete comments</button>
                        <button type="button" onclick="sendDeleteRequest('files')">Delete files</button>
                        <button type="button" onclick="sendDeleteRequest('all')">Delete all data</button>
                    </div>
                </form>
                
                <script>
                    function sendDeleteRequest(fileType) {
                        fetch(`/cgi/python/delete.py?files=${fileType}`, {
                            method: 'DELETE'
                        }).then(response => {
                            if (response.ok) {
                                alert(`Successfully deleted: ${fileType}`);
                            } else {
                                alert('Error deleting data');
                            }
                        }).catch(error => {
                            console.error('Error:', error);
                        });
                    }
                </script>

                <br>
                <h2 style="color: #cd763c; font-weight: bold;">Php CGI.</h2>

                <form action="/cgi/php/echo.php" method="POST">
                    <h2>Test CGI, show what you enter, POST method (Php CGI).<br><br></h2>
                    <div class="form-row">
                        <label for="content">Content:</label>
                        <input type="text" id="content" name="content" required>
                    </div> 
                    <div class="form-row button-row">
                        <button type="submit">Submit</button>
                    </div>
                </form>

                <br>

                <form action="/cgi/php/game.php" method="POST">
                    <h2>Play a game, enter your choice between 'rock' 'paper' 'scissors' (Php CGI).<br><br></h2>
                    <div class="form-row">
                        <label for="content">Choice:</label>
                        <input type="text" id="content" name="content" required>
                    </div> 
                    <div class="form-row button-row">
                        <button type="submit">Submit</button>
                    </div>
                </form>

                <br>

                

                <h2 style="color: #cd763c; font-weight: bold;">CGI error handle.</h2>

                <br>

                <form action="/cgi/python/inf.py" method="POST">
                    <h2>Infinite CGI, POST method (python CGI).<br><br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Run</button>
                    </div>
                </form>

                <br>

                <form action="/cgi/python/error.py" method="POST">
                    <h2>CGI script contains error, POST method (python CGI).<br><br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Run</button>
                    </div>
                </form>

                <br>

                <form action="/cgi/python/crash.py" method="POST">
                    <h2>CGI script contains crash, POST method (python CGI).<br><br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Run</button>
                    </div>
                </form>

                <br>

                <form action="/cgi/python/empty.py" method="POST">
                    <h2>CGI script returns noting, POST method (python CGI).<br><br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Run</button>
                    </div>
                </form>

                <br>

                <form action="/cgi/php/wrongCgiNoContentType.php" method="POST">
                    <h2>Wrong CGI, no content type, POST method (php CGI).<br><br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Run</button>
                    </div>
                </form>

                <br>

                <form action="/cgi/php/wrongCgiInvalidHead.php" method="POST">
                    <h2>Wrong CGI, invalid head, POST method (php CGI).<br><br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Run</button>
                    </div>
                </form>

                <br>
                
            </details>
        </div>


        <div class="chapter">
            <details>
                <summary class="summary">COOKIE</summary>
                <br>
                <form action="/cgi/python/login.py" method="POST">
                    <h2>Login and set cookie.<br><br></h2>
                    <div class="form-row">
                        <label for="user">User:</label>
                        <input type="text" id="user" name="user" required>
                        <label for="password">Password:</label>
                        <input type="password" id="password" name="password" required>
                    </div>
                    <div class="form-row button-row">
                        <button type="submit">Submit</button>
                    </div>
                </form>

                <br>

                <form action="/cgi/python/loginCheck.py" method="GET">
                    <h2>Login cookie and session check.<br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Check</button>
                    </div>
                </form>

                <br>

                <form action="/cgi/python/userinfo.py" method="GET">
                    <h2>Input something, will be saved in your session.<br></h2>
                    <div class="form-row">
                        <label for="userinfo">Userinfo:</label>
                            <input type="text" id="userinfo" name="userinfo" required>
                    </div>
                    <div class="form-row button-row">
                        <button type="submit">submit</button>
                    </div>
                </form>

                <br>

                <form action="/cgi/python/logout.py" method="GET">
                    <h2>Log out and unset your cookie.<br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Log out</button>
                    </div>
                </form>
                
            </details>
        </div>

        <div class="chapter">
            <details>
                <summary class="summary">CONTACT</summary>

                <div class="contact-section">
                    <p>Copyright Notice
                    All content on this website, including but not limited to text, images, audio, video, and other materials, is owned by yfan and shuwang is protected by copyright law. No part of this website may be reproduced, modified, distributed, or used for commercial purposes without prior authorization.<br> 
                    If you wish to use any content from this site, please contact us.<br>
                    <br>
                    Contact Information<br>
                    Email:  yfan@student.42.fr shuwang@student.42.fr<br></p>
                </div>
            </details>
        </div>

    </body>
</html>

===== Test: HTTP full url without port =====
Raw request sent:
GET http://localhost(*(*))/ HTTP/1.1
Host: localhost

Response received:
HTTP/1.1 400 Bad Request
Content-Type: text/plain
Content-Language: en-US
Content-Length: 0


===== Test: HTTP full url with port =====
Raw request sent:
GET http://localhost:8080/ HTTP/1.1
Host: localhost:8080

Response received:
HTTP/1.1 200 OK
Content-Type: text/html
Content-Language: en-US
Content-Length: 22044

<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="utf-8">
        <link rel="stylesheet" type="text/css" href="style.css">
        <title>webserv</title>
    </head>
    <body>
        <h1>42::WEBSERV</h1>
        <img class="main-image" src="assets/section.jpg" alt="cub3d1">
        <br>
        <div class="chapter">
            <details open>
                <summary class="summary">ABOUT</summary>
                <p>
                    Webserv is a lightweight HTTP server built from scratch, following the HTTP/1.1 standard. This project provided hands-on experience in socket programming, HTTP request parsing, and response generation. We implemented key features such as handling GET, POST, and DELETE methods, managing headers, serving static files, and executing CGI scripts for dynamic content. Using epoll(), we ensured efficient connection handling and scalability. Developing Webserv deepened our understanding of networking, concurrency, and performance optimization while reinforcing our ability to build robust and scalable server applications.
                </p>
            </details>
        </div>
        
        <div class="chapter">
            <details>
                <summary class="summary">TEAM</summary>
                <br>
                <p>
                    We are a team with diverse backgrounds in architecture, philosophy of science, and geology, bringing a unique blend of analytical thinking, creativity, and problem-solving to software development. Our varied expertise allows us to approach challenges from multiple perspectives, designing efficient, well-structured, and innovative solutions.
                </p>
                <br>
                <div class="team">
                    <div>
                        <h2>shuwang</h2>
                        <p>Former architect with a passion for coding and design. Enthusiastic about problem-solving, system architecture, and exploring the creative potential of technology. Constantly learning and building at the intersection of logic and creativity.</p>
                    </div>

                    <div>
                        <h2>yfan</h2>
                        <p>Grounded in geology and philosophy, driven by a deep passion for logic and systems. A sharp-minded student mastering low-level and high-level programming alike. Thinks like a theorist, builds like an engineer â€” always learning, always one step ahead.</p>
                    </div>

                </div>
            </details>
        </div>
        
        <div class="chapter">
            <details>
                <summary class="summary">CODING</summary>

                <br>
                <p>
                    Here are some student projects we developed at Ecole42, showcasing our hands-on experience, collaboration, and problem-solving skills. Our work covered system programming, web development, and computer graphics. Through these projects, we gained expertise in low-level programming, process management, networking, concurrency, and 3D rendering, allowing us to build robust and efficient software solutions.
                </p>
            
                <div class="container">

                    <div class="project-block">
                        <div>
                                <img src="assets/webserv.jpg" alt="Third Image">
                        </div>

                        <div class="text-container">
                        <h2>webserv(2025)</h2>
                        <p class="text-project">Cub3D is a 3D raycasting game engine that allows players to navigate through a 3D environment. It implements algorithms to render 3D scenes in a 2D space, similar to how older first-person games like Wolfenstein 3D worked.</p>
                        </div>
                    </div>

                    <div class="project-block">
                        <div>
                            <a href="https://github.com/swangarch/cub3d" target="_blank" rel="noopener noreferrer">
                                <img src="assets/1.png" alt="First Image">
                            </a>
                        </div>

                        <div class="text-container">
                        <h2>cub3d(2024)</h2>
                        <p class="text-project">Cub3D is a 3D raycasting game engine that allows players to navigate through a 3D environment. It implements algorithms to render 3D scenes in a 2D space, similar to how older first-person games like Wolfenstein 3D worked.</p>
                        </div>
                    </div>

                    <div class="project-block">
                        <div>
                            <a href="https://github.com/swangarch/cub3d" target="_blank" rel="noopener noreferrer">
                                <img src="assets/2.png" alt="Second Image">
                            </a>
                        </div>

                        <div class="text-container">
                        <h2>cub3d(2024)</h2>
                        <p class="text-project">Cub3D is a 3D raycasting game engine that allows players to navigate through a 3D environment. It implements algorithms to render 3D scenes in a 2D space, similar to how older first-person games like Wolfenstein 3D worked.</p>
                        </div>
                    </div>
                        
                    

                    <div class="project-block">
                        <div>
                            <a href="https://github.com/swangarch/minishell" target="_blank" rel="noopener noreferrer">
                                <img src="assets/minishell.jpg" alt="Fourth Image">
                            </a>
                        </div>
                        
                        <div class="text-container">
                        <h2>minishell(2024)</h2>
                        <p class="text-project">Minishell is a shell implementation project at Ecole42. It involves parsing user commands, handling built-in functions, and managing process execution, signals, and redirections, closely mimicking a real Unix shell.</p>
                        </div>
                    </div>

                    <div class="project-block">
                        <div>
                            <a href="https://github.com/swangarch/so_long" target="_blank" rel="noopener noreferrer">
                                <img src="assets/4.png" alt="Fourth Image">
                            </a>
                        </div>
                        
                        <div class="text-container">
                        <h2>so_long(2024)</h2>
                        <p class="text-project">SoLong is a graphical game project developed as part of the Ecole42 curriculum. It uses the MiniLibX library and focuses on implementing a 2D game environment where players can navigate through a maze.</p>
                        </div>
                    </div>

                    <div class="project-block">
                        <div>
                            <a href="https://github.com/swangarch/push_swap" target="_blank" rel="noopener noreferrer">
                                <img src="assets/push_swap.jpg" alt="Fourth Image">
                            </a>
                        </div>
                        
                        <div class="text-container">
                        <h2>push_swap(2024)</h2>
                        <p class="text-project">Push_swap is an algorithmic project from the Ecole42 curriculum. The goal is to sort a stack of numbers using a limited set of operations while optimizing for the least number of moves.</p>
                        </div>
                    </div>

                </div>
            </details>
        </div>
        
        <div class="chapter">
            <details>
                <summary class="summary">SERVER</summary>
                <br>

                <p>
                    Our webserv tester is a dedicated platform for testing and evaluating the functionality of the Webserv HTTP server. It provides a simple environment to simulate different web requests, test server responses, and ensure the proper handling of various HTTP methods and features. The site helps verify the server's performance, scalability, and accuracy, offering an easy way to validate and troubleshoot server configurations.
                </p>

                <h2 style="color: #cd763c; font-weight: bold;">GET method.</h2>

                <form action="/" method="GET">
                    <h2>Go to /, return index.<br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Go</button>
                    </div>
                </form>

                <br>

                <form action="/data/" method="GET">
                    <h2>Go to /data, return autoindex.<br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Go</button>
                    </div>
                </form>

                <br>

                <form action="/assets/" method="GET">
                    <h2>Go to /assets, autoindex not allowed return 403.<br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Go</button>
                    </div>
                </form>

                <br>

                <form action="/notexist" method="GET">
                    <h2>Go to /notexist, return 404.<br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Go</button>
                    </div>
                </form>

                <br>

                <form action="/assets/notexist" method="GET">
                    <h2>Go to /assets/notexist, return default error 404.<br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Go</button>
                    </div>
                </form>

                <br>

                <form action="/getnotallowed" method="GET">
                    <h2>Go to /getnotallowed, return default error 405.<br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Go</button>
                    </div>
                </form>

                <br>

                <h2 style="color: #cd763c; font-weight: bold;">POST method.</h2>
                <form action="/upload" method="POST" enctype="multipart/form-data">
                    <h2>Upload a file, POST method (built-in).<br><br></h2>
                    <div class="form-row">
                        <label for="uploadfile1">File:</label>
                        <input type="file" id="uploadfile1" name="file1" required>
                    </div>
                    <div class="form-row button-row">
                        <button type="submit">Submit</button>
                    </div>
                </form>

                <br>
                <h2 style="color: #cd763c; font-weight: bold;">DELETE method.</h2>
                <form>
                    <h2>Delete file or directory, DELETE method (built-in).</h2>
                    <div class="form-row">
                        <input type="text" id="fileDeleteNew" placeholder="File to delete">
                    </div>
                    
                    <div class="form-row button-row">
                        <button type="button" onclick="deleteFile()">Delete</button>
                        <script src = deleterequest.js></script>
                    </div>
                </form>

                <br>

                <h2 style="color: #cd763c; font-weight: bold;">Redirection.</h2>

                <form action="/redir" method="GET">
                    <h2>Redirection /redir -> /data with autoIndex.<br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Go</button>
                    </div>
                </form>

                <br>

                <form action="/redirexample" method="GET">
                    <h2>Redirection /redirexample -> example.com.<br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Go</button>
                    </div>
                </form>

                <br>
                
            </details>
        </div>

        <div class="chapter">
            <details>
                <summary class="summary">CGI</summary>
                <br>
                <h2 style="color: #cd763c; font-weight: bold;">Python CGI.</h2>
                <form action="/cgi/python/comment.py" method="GET">
                    <h2>Leave a comment, GET method (python CGI).<br><br></h2>
                    <div class="form-row">
                        <label for="name">Name:</label>
                        <input type="text" id="name" name="name" required>
                        <label for="email">Email:</label>
                        <input type="email" id="email" name="email" required>
                    </div>
                    <div class="form-row">
                        <label for="comment">Comment:</label>
                        <input id="comment" name="comment" required>
                    </div>
                    <div class="form-row button-row">
                        <button type="submit">Submit</button>
                    </div>
                </form>

                <br>

                <form action="/cgi/python/show_comment.py" method="GET">
                    <h2>Show all comments, GET method (python CGI).<br><br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Show</button>
                    </div>
                </form>

                <br>

                <form action="/cgi/python/upload.py" method="POST" enctype="multipart/form-data">
                    <h2>Upload a file, POST method (python CGI).<br><br></h2>
                    <div class="form-row">

                        <label for="uploadfile">File:</label>
                        <input type="file" id="uploadfile" name="file" required>
                    </div>
                    <div class="form-row button-row">
                        <button type="submit">Submit</button>
                    </div>
                </form>

                <br>

                <form>
                    <h2>Delete datas, DELETE method (python CGI).</h2>
                    <div class="form-row">
                        <button type="button" onclick="sendDeleteRequest('comments')">Delete comments</button>
                        <button type="button" onclick="sendDeleteRequest('files')">Delete files</button>
                        <button type="button" onclick="sendDeleteRequest('all')">Delete all data</button>
                    </div>
                </form>
                
                <script>
                    function sendDeleteRequest(fileType) {
                        fetch(`/cgi/python/delete.py?files=${fileType}`, {
                            method: 'DELETE'
                        }).then(response => {
                            if (response.ok) {
                                alert(`Successfully deleted: ${fileType}`);
                            } else {
                                alert('Error deleting data');
                            }
                        }).catch(error => {
                            console.error('Error:', error);
                        });
                    }
                </script>

                <br>
                <h2 style="color: #cd763c; font-weight: bold;">Php CGI.</h2>

                <form action="/cgi/php/echo.php" method="POST">
                    <h2>Test CGI, show what you enter, POST method (Php CGI).<br><br></h2>
                    <div class="form-row">
                        <label for="content">Content:</label>
                        <input type="text" id="content" name="content" required>
                    </div> 
                    <div class="form-row button-row">
                        <button type="submit">Submit</button>
                    </div>
                </form>

                <br>

                <form action="/cgi/php/game.php" method="POST">
                    <h2>Play a game, enter your choice between 'rock' 'paper' 'scissors' (Php CGI).<br><br></h2>
                    <div class="form-row">
                        <label for="content">Choice:</label>
                        <input type="text" id="content" name="content" required>
                    </div> 
                    <div class="form-row button-row">
                        <button type="submit">Submit</button>
                    </div>
                </form>

                <br>

                

                <h2 style="color: #cd763c; font-weight: bold;">CGI error handle.</h2>

                <br>

                <form action="/cgi/python/inf.py" method="POST">
                    <h2>Infinite CGI, POST method (python CGI).<br><br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Run</button>
                    </div>
                </form>

                <br>

                <form action="/cgi/python/error.py" method="POST">
                    <h2>CGI script contains error, POST method (python CGI).<br><br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Run</button>
                    </div>
                </form>

                <br>

                <form action="/cgi/python/crash.py" method="POST">
                    <h2>CGI script contains crash, POST method (python CGI).<br><br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Run</button>
                    </div>
                </form>

                <br>

                <form action="/cgi/python/empty.py" method="POST">
                    <h2>CGI script returns noting, POST method (python CGI).<br><br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Run</button>
                    </div>
                </form>

                <br>

                <form action="/cgi/php/wrongCgiNoContentType.php" method="POST">
                    <h2>Wrong CGI, no content type, POST method (php CGI).<br><br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Run</button>
                    </div>
                </form>

                <br>

                <form action="/cgi/php/wrongCgiInvalidHead.php" method="POST">
                    <h2>Wrong CGI, invalid head, POST method (php CGI).<br><br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Run</button>
                    </div>
                </form>

                <br>
                
            </details>
        </div>


        <div class="chapter">
            <details>
                <summary class="summary">COOKIE</summary>
                <br>
                <form action="/cgi/python/login.py" method="POST">
                    <h2>Login and set cookie.<br><br></h2>
                    <div class="form-row">
                        <label for="user">User:</label>
                        <input type="text" id="user" name="user" required>
                        <label for="password">Password:</label>
                        <input type="password" id="password" name="password" required>
                    </div>
                    <div class="form-row button-row">
                        <button type="submit">Submit</button>
                    </div>
                </form>

                <br>

                <form action="/cgi/python/loginCheck.py" method="GET">
                    <h2>Login cookie and session check.<br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Check</button>
                    </div>
                </form>

                <br>

                <form action="/cgi/python/userinfo.py" method="GET">
                    <h2>Input something, will be saved in your session.<br></h2>
                    <div class="form-row">
                        <label for="userinfo">Userinfo:</label>
                            <input type="text" id="userinfo" name="userinfo" required>
                    </div>
                    <div class="form-row button-row">
                        <button type="submit">submit</button>
                    </div>
                </form>

                <br>

                <form action="/cgi/python/logout.py" method="GET">
                    <h2>Log out and unset your cookie.<br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Log out</button>
                    </div>
                </form>
                
            </details>
        </div>

        <div class="chapter">
            <details>
                <summary class="summary">CONTACT</summary>

                <div class="contact-section">
                    <p>Copyright Notice
                    All content on this website, including but not limited to text, images, audio, video, and other materials, is owned by yfan and shuwang is protected by copyright law. No part of this website may be reproduced, modified, distributed, or used for commercial purposes without prior authorization.<br> 
                    If you wish to use any content from this site, please contact us.<br>
                    <br>
                    Contact Information<br>
                    Email:  yfan@student.42.fr shuwang@student.42.fr<br></p>
                </div>
            </details>
        </div>

    </body>
</html>

===== Test: HTTP full url not patch =====
Raw request sent:
GET http://localhost:8080/ HTTP/1.1
Host: localhost


Response received:
HTTP/1.1 200 OK
Content-Type: text/html
Content-Language: en-US
Content-Length: 22044

<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="utf-8">
        <link rel="stylesheet" type="text/css" href="style.css">
        <title>webserv</title>
    </head>
    <body>
        <h1>42::WEBSERV</h1>
        <img class="main-image" src="assets/section.jpg" alt="cub3d1">
        <br>
        <div class="chapter">
            <details open>
                <summary class="summary">ABOUT</summary>
                <p>
                    Webserv is a lightweight HTTP server built from scratch, following the HTTP/1.1 standard. This project provided hands-on experience in socket programming, HTTP request parsing, and response generation. We implemented key features such as handling GET, POST, and DELETE methods, managing headers, serving static files, and executing CGI scripts for dynamic content. Using epoll(), we ensured efficient connection handling and scalability. Developing Webserv deepened our understanding of networking, concurrency, and performance optimization while reinforcing our ability to build robust and scalable server applications.
                </p>
            </details>
        </div>
        
        <div class="chapter">
            <details>
                <summary class="summary">TEAM</summary>
                <br>
                <p>
                    We are a team with diverse backgrounds in architecture, philosophy of science, and geology, bringing a unique blend of analytical thinking, creativity, and problem-solving to software development. Our varied expertise allows us to approach challenges from multiple perspectives, designing efficient, well-structured, and innovative solutions.
                </p>
                <br>
                <div class="team">
                    <div>
                        <h2>shuwang</h2>
                        <p>Former architect with a passion for coding and design. Enthusiastic about problem-solving, system architecture, and exploring the creative potential of technology. Constantly learning and building at the intersection of logic and creativity.</p>
                    </div>

                    <div>
                        <h2>yfan</h2>
                        <p>Grounded in geology and philosophy, driven by a deep passion for logic and systems. A sharp-minded student mastering low-level and high-level programming alike. Thinks like a theorist, builds like an engineer â€” always learning, always one step ahead.</p>
                    </div>

                </div>
            </details>
        </div>
        
        <div class="chapter">
            <details>
                <summary class="summary">CODING</summary>

                <br>
                <p>
                    Here are some student projects we developed at Ecole42, showcasing our hands-on experience, collaboration, and problem-solving skills. Our work covered system programming, web development, and computer graphics. Through these projects, we gained expertise in low-level programming, process management, networking, concurrency, and 3D rendering, allowing us to build robust and efficient software solutions.
                </p>
            
                <div class="container">

                    <div class="project-block">
                        <div>
                                <img src="assets/webserv.jpg" alt="Third Image">
                        </div>

                        <div class="text-container">
                        <h2>webserv(2025)</h2>
                        <p class="text-project">Cub3D is a 3D raycasting game engine that allows players to navigate through a 3D environment. It implements algorithms to render 3D scenes in a 2D space, similar to how older first-person games like Wolfenstein 3D worked.</p>
                        </div>
                    </div>

                    <div class="project-block">
                        <div>
                            <a href="https://github.com/swangarch/cub3d" target="_blank" rel="noopener noreferrer">
                                <img src="assets/1.png" alt="First Image">
                            </a>
                        </div>

                        <div class="text-container">
                        <h2>cub3d(2024)</h2>
                        <p class="text-project">Cub3D is a 3D raycasting game engine that allows players to navigate through a 3D environment. It implements algorithms to render 3D scenes in a 2D space, similar to how older first-person games like Wolfenstein 3D worked.</p>
                        </div>
                    </div>

                    <div class="project-block">
                        <div>
                            <a href="https://github.com/swangarch/cub3d" target="_blank" rel="noopener noreferrer">
                                <img src="assets/2.png" alt="Second Image">
                            </a>
                        </div>

                        <div class="text-container">
                        <h2>cub3d(2024)</h2>
                        <p class="text-project">Cub3D is a 3D raycasting game engine that allows players to navigate through a 3D environment. It implements algorithms to render 3D scenes in a 2D space, similar to how older first-person games like Wolfenstein 3D worked.</p>
                        </div>
                    </div>
                        
                    

                    <div class="project-block">
                        <div>
                            <a href="https://github.com/swangarch/minishell" target="_blank" rel="noopener noreferrer">
                                <img src="assets/minishell.jpg" alt="Fourth Image">
                            </a>
                        </div>
                        
                        <div class="text-container">
                        <h2>minishell(2024)</h2>
                        <p class="text-project">Minishell is a shell implementation project at Ecole42. It involves parsing user commands, handling built-in functions, and managing process execution, signals, and redirections, closely mimicking a real Unix shell.</p>
                        </div>
                    </div>

                    <div class="project-block">
                        <div>
                            <a href="https://github.com/swangarch/so_long" target="_blank" rel="noopener noreferrer">
                                <img src="assets/4.png" alt="Fourth Image">
                            </a>
                        </div>
                        
                        <div class="text-container">
                        <h2>so_long(2024)</h2>
                        <p class="text-project">SoLong is a graphical game project developed as part of the Ecole42 curriculum. It uses the MiniLibX library and focuses on implementing a 2D game environment where players can navigate through a maze.</p>
                        </div>
                    </div>

                    <div class="project-block">
                        <div>
                            <a href="https://github.com/swangarch/push_swap" target="_blank" rel="noopener noreferrer">
                                <img src="assets/push_swap.jpg" alt="Fourth Image">
                            </a>
                        </div>
                        
                        <div class="text-container">
                        <h2>push_swap(2024)</h2>
                        <p class="text-project">Push_swap is an algorithmic project from the Ecole42 curriculum. The goal is to sort a stack of numbers using a limited set of operations while optimizing for the least number of moves.</p>
                        </div>
                    </div>

                </div>
            </details>
        </div>
        
        <div class="chapter">
            <details>
                <summary class="summary">SERVER</summary>
                <br>

                <p>
                    Our webserv tester is a dedicated platform for testing and evaluating the functionality of the Webserv HTTP server. It provides a simple environment to simulate different web requests, test server responses, and ensure the proper handling of various HTTP methods and features. The site helps verify the server's performance, scalability, and accuracy, offering an easy way to validate and troubleshoot server configurations.
                </p>

                <h2 style="color: #cd763c; font-weight: bold;">GET method.</h2>

                <form action="/" method="GET">
                    <h2>Go to /, return index.<br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Go</button>
                    </div>
                </form>

                <br>

                <form action="/data/" method="GET">
                    <h2>Go to /data, return autoindex.<br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Go</button>
                    </div>
                </form>

                <br>

                <form action="/assets/" method="GET">
                    <h2>Go to /assets, autoindex not allowed return 403.<br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Go</button>
                    </div>
                </form>

                <br>

                <form action="/notexist" method="GET">
                    <h2>Go to /notexist, return 404.<br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Go</button>
                    </div>
                </form>

                <br>

                <form action="/assets/notexist" method="GET">
                    <h2>Go to /assets/notexist, return default error 404.<br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Go</button>
                    </div>
                </form>

                <br>

                <form action="/getnotallowed" method="GET">
                    <h2>Go to /getnotallowed, return default error 405.<br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Go</button>
                    </div>
                </form>

                <br>

                <h2 style="color: #cd763c; font-weight: bold;">POST method.</h2>
                <form action="/upload" method="POST" enctype="multipart/form-data">
                    <h2>Upload a file, POST method (built-in).<br><br></h2>
                    <div class="form-row">
                        <label for="uploadfile1">File:</label>
                        <input type="file" id="uploadfile1" name="file1" required>
                    </div>
                    <div class="form-row button-row">
                        <button type="submit">Submit</button>
                    </div>
                </form>

                <br>
                <h2 style="color: #cd763c; font-weight: bold;">DELETE method.</h2>
                <form>
                    <h2>Delete file or directory, DELETE method (built-in).</h2>
                    <div class="form-row">
                        <input type="text" id="fileDeleteNew" placeholder="File to delete">
                    </div>
                    
                    <div class="form-row button-row">
                        <button type="button" onclick="deleteFile()">Delete</button>
                        <script src = deleterequest.js></script>
                    </div>
                </form>

                <br>

                <h2 style="color: #cd763c; font-weight: bold;">Redirection.</h2>

                <form action="/redir" method="GET">
                    <h2>Redirection /redir -> /data with autoIndex.<br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Go</button>
                    </div>
                </form>

                <br>

                <form action="/redirexample" method="GET">
                    <h2>Redirection /redirexample -> example.com.<br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Go</button>
                    </div>
                </form>

                <br>
                
            </details>
        </div>

        <div class="chapter">
            <details>
                <summary class="summary">CGI</summary>
                <br>
                <h2 style="color: #cd763c; font-weight: bold;">Python CGI.</h2>
                <form action="/cgi/python/comment.py" method="GET">
                    <h2>Leave a comment, GET method (python CGI).<br><br></h2>
                    <div class="form-row">
                        <label for="name">Name:</label>
                        <input type="text" id="name" name="name" required>
                        <label for="email">Email:</label>
                        <input type="email" id="email" name="email" required>
                    </div>
                    <div class="form-row">
                        <label for="comment">Comment:</label>
                        <input id="comment" name="comment" required>
                    </div>
                    <div class="form-row button-row">
                        <button type="submit">Submit</button>
                    </div>
                </form>

                <br>

                <form action="/cgi/python/show_comment.py" method="GET">
                    <h2>Show all comments, GET method (python CGI).<br><br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Show</button>
                    </div>
                </form>

                <br>

                <form action="/cgi/python/upload.py" method="POST" enctype="multipart/form-data">
                    <h2>Upload a file, POST method (python CGI).<br><br></h2>
                    <div class="form-row">

                        <label for="uploadfile">File:</label>
                        <input type="file" id="uploadfile" name="file" required>
                    </div>
                    <div class="form-row button-row">
                        <button type="submit">Submit</button>
                    </div>
                </form>

                <br>

                <form>
                    <h2>Delete datas, DELETE method (python CGI).</h2>
                    <div class="form-row">
                        <button type="button" onclick="sendDeleteRequest('comments')">Delete comments</button>
                        <button type="button" onclick="sendDeleteRequest('files')">Delete files</button>
                        <button type="button" onclick="sendDeleteRequest('all')">Delete all data</button>
                    </div>
                </form>
                
                <script>
                    function sendDeleteRequest(fileType) {
                        fetch(`/cgi/python/delete.py?files=${fileType}`, {
                            method: 'DELETE'
                        }).then(response => {
                            if (response.ok) {
                                alert(`Successfully deleted: ${fileType}`);
                            } else {
                                alert('Error deleting data');
                            }
                        }).catch(error => {
                            console.error('Error:', error);
                        });
                    }
                </script>

                <br>
                <h2 style="color: #cd763c; font-weight: bold;">Php CGI.</h2>

                <form action="/cgi/php/echo.php" method="POST">
                    <h2>Test CGI, show what you enter, POST method (Php CGI).<br><br></h2>
                    <div class="form-row">
                        <label for="content">Content:</label>
                        <input type="text" id="content" name="content" required>
                    </div> 
                    <div class="form-row button-row">
                        <button type="submit">Submit</button>
                    </div>
                </form>

                <br>

                <form action="/cgi/php/game.php" method="POST">
                    <h2>Play a game, enter your choice between 'rock' 'paper' 'scissors' (Php CGI).<br><br></h2>
                    <div class="form-row">
                        <label for="content">Choice:</label>
                        <input type="text" id="content" name="content" required>
                    </div> 
                    <div class="form-row button-row">
                        <button type="submit">Submit</button>
                    </div>
                </form>

                <br>

                

                <h2 style="color: #cd763c; font-weight: bold;">CGI error handle.</h2>

                <br>

                <form action="/cgi/python/inf.py" method="POST">
                    <h2>Infinite CGI, POST method (python CGI).<br><br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Run</button>
                    </div>
                </form>

                <br>

                <form action="/cgi/python/error.py" method="POST">
                    <h2>CGI script contains error, POST method (python CGI).<br><br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Run</button>
                    </div>
                </form>

                <br>

                <form action="/cgi/python/crash.py" method="POST">
                    <h2>CGI script contains crash, POST method (python CGI).<br><br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Run</button>
                    </div>
                </form>

                <br>

                <form action="/cgi/python/empty.py" method="POST">
                    <h2>CGI script returns noting, POST method (python CGI).<br><br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Run</button>
                    </div>
                </form>

                <br>

                <form action="/cgi/php/wrongCgiNoContentType.php" method="POST">
                    <h2>Wrong CGI, no content type, POST method (php CGI).<br><br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Run</button>
                    </div>
                </form>

                <br>

                <form action="/cgi/php/wrongCgiInvalidHead.php" method="POST">
                    <h2>Wrong CGI, invalid head, POST method (php CGI).<br><br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Run</button>
                    </div>
                </form>

                <br>
                
            </details>
        </div>


        <div class="chapter">
            <details>
                <summary class="summary">COOKIE</summary>
                <br>
                <form action="/cgi/python/login.py" method="POST">
                    <h2>Login and set cookie.<br><br></h2>
                    <div class="form-row">
                        <label for="user">User:</label>
                        <input type="text" id="user" name="user" required>
                        <label for="password">Password:</label>
                        <input type="password" id="password" name="password" required>
                    </div>
                    <div class="form-row button-row">
                        <button type="submit">Submit</button>
                    </div>
                </form>

                <br>

                <form action="/cgi/python/loginCheck.py" method="GET">
                    <h2>Login cookie and session check.<br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Check</button>
                    </div>
                </form>

                <br>

                <form action="/cgi/python/userinfo.py" method="GET">
                    <h2>Input something, will be saved in your session.<br></h2>
                    <div class="form-row">
                        <label for="userinfo">Userinfo:</label>
                            <input type="text" id="userinfo" name="userinfo" required>
                    </div>
                    <div class="form-row button-row">
                        <button type="submit">submit</button>
                    </div>
                </form>

                <br>

                <form action="/cgi/python/logout.py" method="GET">
                    <h2>Log out and unset your cookie.<br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Log out</button>
                    </div>
                </form>
                
            </details>
        </div>

        <div class="chapter">
            <details>
                <summary class="summary">CONTACT</summary>

                <div class="contact-section">
                    <p>Copyright Notice
                    All content on this website, including but not limited to text, images, audio, video, and other materials, is owned by yfan and shuwang is protected by copyright law. No part of this website may be reproduced, modified, distributed, or used for commercial purposes without prior authorization.<br> 
                    If you wish to use any content from this site, please contact us.<br>
                    <br>
                    Contact Information<br>
                    Email:  yfan@student.42.fr shuwang@student.42.fr<br></p>
                </div>
            </details>
        </div>

    </body>
</html>
HTTP/1.1 400 Bad Request
Content-Length: 0


===== Test: GET HTTP Method with body =====
Raw request sent:
GET / HTTP/1.1
Host: localhost

shuai
Response received:
HTTP/1.1 200 OK
Content-Type: text/html
Content-Language: en-US
Content-Length: 22044

<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="utf-8">
        <link rel="stylesheet" type="text/css" href="style.css">
        <title>webserv</title>
    </head>
    <body>
        <h1>42::WEBSERV</h1>
        <img class="main-image" src="assets/section.jpg" alt="cub3d1">
        <br>
        <div class="chapter">
            <details open>
                <summary class="summary">ABOUT</summary>
                <p>
                    Webserv is a lightweight HTTP server built from scratch, following the HTTP/1.1 standard. This project provided hands-on experience in socket programming, HTTP request parsing, and response generation. We implemented key features such as handling GET, POST, and DELETE methods, managing headers, serving static files, and executing CGI scripts for dynamic content. Using epoll(), we ensured efficient connection handling and scalability. Developing Webserv deepened our understanding of networking, concurrency, and performance optimization while reinforcing our ability to build robust and scalable server applications.
                </p>
            </details>
        </div>
        
        <div class="chapter">
            <details>
                <summary class="summary">TEAM</summary>
                <br>
                <p>
                    We are a team with diverse backgrounds in architecture, philosophy of science, and geology, bringing a unique blend of analytical thinking, creativity, and problem-solving to software development. Our varied expertise allows us to approach challenges from multiple perspectives, designing efficient, well-structured, and innovative solutions.
                </p>
                <br>
                <div class="team">
                    <div>
                        <h2>shuwang</h2>
                        <p>Former architect with a passion for coding and design. Enthusiastic about problem-solving, system architecture, and exploring the creative potential of technology. Constantly learning and building at the intersection of logic and creativity.</p>
                    </div>

                    <div>
                        <h2>yfan</h2>
                        <p>Grounded in geology and philosophy, driven by a deep passion for logic and systems. A sharp-minded student mastering low-level and high-level programming alike. Thinks like a theorist, builds like an engineer â€” always learning, always one step ahead.</p>
                    </div>

                </div>
            </details>
        </div>
        
        <div class="chapter">
            <details>
                <summary class="summary">CODING</summary>

                <br>
                <p>
                    Here are some student projects we developed at Ecole42, showcasing our hands-on experience, collaboration, and problem-solving skills. Our work covered system programming, web development, and computer graphics. Through these projects, we gained expertise in low-level programming, process management, networking, concurrency, and 3D rendering, allowing us to build robust and efficient software solutions.
                </p>
            
                <div class="container">

                    <div class="project-block">
                        <div>
                                <img src="assets/webserv.jpg" alt="Third Image">
                        </div>

                        <div class="text-container">
                        <h2>webserv(2025)</h2>
                        <p class="text-project">Cub3D is a 3D raycasting game engine that allows players to navigate through a 3D environment. It implements algorithms to render 3D scenes in a 2D space, similar to how older first-person games like Wolfenstein 3D worked.</p>
                        </div>
                    </div>

                    <div class="project-block">
                        <div>
                            <a href="https://github.com/swangarch/cub3d" target="_blank" rel="noopener noreferrer">
                                <img src="assets/1.png" alt="First Image">
                            </a>
                        </div>

                        <div class="text-container">
                        <h2>cub3d(2024)</h2>
                        <p class="text-project">Cub3D is a 3D raycasting game engine that allows players to navigate through a 3D environment. It implements algorithms to render 3D scenes in a 2D space, similar to how older first-person games like Wolfenstein 3D worked.</p>
                        </div>
                    </div>

                    <div class="project-block">
                        <div>
                            <a href="https://github.com/swangarch/cub3d" target="_blank" rel="noopener noreferrer">
                                <img src="assets/2.png" alt="Second Image">
                            </a>
                        </div>

                        <div class="text-container">
                        <h2>cub3d(2024)</h2>
                        <p class="text-project">Cub3D is a 3D raycasting game engine that allows players to navigate through a 3D environment. It implements algorithms to render 3D scenes in a 2D space, similar to how older first-person games like Wolfenstein 3D worked.</p>
                        </div>
                    </div>
                        
                    

                    <div class="project-block">
                        <div>
                            <a href="https://github.com/swangarch/minishell" target="_blank" rel="noopener noreferrer">
                                <img src="assets/minishell.jpg" alt="Fourth Image">
                            </a>
                        </div>
                        
                        <div class="text-container">
                        <h2>minishell(2024)</h2>
                        <p class="text-project">Minishell is a shell implementation project at Ecole42. It involves parsing user commands, handling built-in functions, and managing process execution, signals, and redirections, closely mimicking a real Unix shell.</p>
                        </div>
                    </div>

                    <div class="project-block">
                        <div>
                            <a href="https://github.com/swangarch/so_long" target="_blank" rel="noopener noreferrer">
                                <img src="assets/4.png" alt="Fourth Image">
                            </a>
                        </div>
                        
                        <div class="text-container">
                        <h2>so_long(2024)</h2>
                        <p class="text-project">SoLong is a graphical game project developed as part of the Ecole42 curriculum. It uses the MiniLibX library and focuses on implementing a 2D game environment where players can navigate through a maze.</p>
                        </div>
                    </div>

                    <div class="project-block">
                        <div>
                            <a href="https://github.com/swangarch/push_swap" target="_blank" rel="noopener noreferrer">
                                <img src="assets/push_swap.jpg" alt="Fourth Image">
                            </a>
                        </div>
                        
                        <div class="text-container">
                        <h2>push_swap(2024)</h2>
                        <p class="text-project">Push_swap is an algorithmic project from the Ecole42 curriculum. The goal is to sort a stack of numbers using a limited set of operations while optimizing for the least number of moves.</p>
                        </div>
                    </div>

                </div>
            </details>
        </div>
        
        <div class="chapter">
            <details>
                <summary class="summary">SERVER</summary>
                <br>

                <p>
                    Our webserv tester is a dedicated platform for testing and evaluating the functionality of the Webserv HTTP server. It provides a simple environment to simulate different web requests, test server responses, and ensure the proper handling of various HTTP methods and features. The site helps verify the server's performance, scalability, and accuracy, offering an easy way to validate and troubleshoot server configurations.
                </p>

                <h2 style="color: #cd763c; font-weight: bold;">GET method.</h2>

                <form action="/" method="GET">
                    <h2>Go to /, return index.<br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Go</button>
                    </div>
                </form>

                <br>

                <form action="/data/" method="GET">
                    <h2>Go to /data, return autoindex.<br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Go</button>
                    </div>
                </form>

                <br>

                <form action="/assets/" method="GET">
                    <h2>Go to /assets, autoindex not allowed return 403.<br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Go</button>
                    </div>
                </form>

                <br>

                <form action="/notexist" method="GET">
                    <h2>Go to /notexist, return 404.<br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Go</button>
                    </div>
                </form>

                <br>

                <form action="/assets/notexist" method="GET">
                    <h2>Go to /assets/notexist, return default error 404.<br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Go</button>
                    </div>
                </form>

                <br>

                <form action="/getnotallowed" method="GET">
                    <h2>Go to /getnotallowed, return default error 405.<br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Go</button>
                    </div>
                </form>

                <br>

                <h2 style="color: #cd763c; font-weight: bold;">POST method.</h2>
                <form action="/upload" method="POST" enctype="multipart/form-data">
                    <h2>Upload a file, POST method (built-in).<br><br></h2>
                    <div class="form-row">
                        <label for="uploadfile1">File:</label>
                        <input type="file" id="uploadfile1" name="file1" required>
                    </div>
                    <div class="form-row button-row">
                        <button type="submit">Submit</button>
                    </div>
                </form>

                <br>
                <h2 style="color: #cd763c; font-weight: bold;">DELETE method.</h2>
                <form>
                    <h2>Delete file or directory, DELETE method (built-in).</h2>
                    <div class="form-row">
                        <input type="text" id="fileDeleteNew" placeholder="File to delete">
                    </div>
                    
                    <div class="form-row button-row">
                        <button type="button" onclick="deleteFile()">Delete</button>
                        <script src = deleterequest.js></script>
                    </div>
                </form>

                <br>

                <h2 style="color: #cd763c; font-weight: bold;">Redirection.</h2>

                <form action="/redir" method="GET">
                    <h2>Redirection /redir -> /data with autoIndex.<br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Go</button>
                    </div>
                </form>

                <br>

                <form action="/redirexample" method="GET">
                    <h2>Redirection /redirexample -> example.com.<br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Go</button>
                    </div>
                </form>

                <br>
                
            </details>
        </div>

        <div class="chapter">
            <details>
                <summary class="summary">CGI</summary>
                <br>
                <h2 style="color: #cd763c; font-weight: bold;">Python CGI.</h2>
                <form action="/cgi/python/comment.py" method="GET">
                    <h2>Leave a comment, GET method (python CGI).<br><br></h2>
                    <div class="form-row">
                        <label for="name">Name:</label>
                        <input type="text" id="name" name="name" required>
                        <label for="email">Email:</label>
                        <input type="email" id="email" name="email" required>
                    </div>
                    <div class="form-row">
                        <label for="comment">Comment:</label>
                        <input id="comment" name="comment" required>
                    </div>
                    <div class="form-row button-row">
                        <button type="submit">Submit</button>
                    </div>
                </form>

                <br>

                <form action="/cgi/python/show_comment.py" method="GET">
                    <h2>Show all comments, GET method (python CGI).<br><br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Show</button>
                    </div>
                </form>

                <br>

                <form action="/cgi/python/upload.py" method="POST" enctype="multipart/form-data">
                    <h2>Upload a file, POST method (python CGI).<br><br></h2>
                    <div class="form-row">

                        <label for="uploadfile">File:</label>
                        <input type="file" id="uploadfile" name="file" required>
                    </div>
                    <div class="form-row button-row">
                        <button type="submit">Submit</button>
                    </div>
                </form>

                <br>

                <form>
                    <h2>Delete datas, DELETE method (python CGI).</h2>
                    <div class="form-row">
                        <button type="button" onclick="sendDeleteRequest('comments')">Delete comments</button>
                        <button type="button" onclick="sendDeleteRequest('files')">Delete files</button>
                        <button type="button" onclick="sendDeleteRequest('all')">Delete all data</button>
                    </div>
                </form>
                
                <script>
                    function sendDeleteRequest(fileType) {
                        fetch(`/cgi/python/delete.py?files=${fileType}`, {
                            method: 'DELETE'
                        }).then(response => {
                            if (response.ok) {
                                alert(`Successfully deleted: ${fileType}`);
                            } else {
                                alert('Error deleting data');
                            }
                        }).catch(error => {
                            console.error('Error:', error);
                        });
                    }
                </script>

                <br>
                <h2 style="color: #cd763c; font-weight: bold;">Php CGI.</h2>

                <form action="/cgi/php/echo.php" method="POST">
                    <h2>Test CGI, show what you enter, POST method (Php CGI).<br><br></h2>
                    <div class="form-row">
                        <label for="content">Content:</label>
                        <input type="text" id="content" name="content" required>
                    </div> 
                    <div class="form-row button-row">
                        <button type="submit">Submit</button>
                    </div>
                </form>

                <br>

                <form action="/cgi/php/game.php" method="POST">
                    <h2>Play a game, enter your choice between 'rock' 'paper' 'scissors' (Php CGI).<br><br></h2>
                    <div class="form-row">
                        <label for="content">Choice:</label>
                        <input type="text" id="content" name="content" required>
                    </div> 
                    <div class="form-row button-row">
                        <button type="submit">Submit</button>
                    </div>
                </form>

                <br>

                

                <h2 style="color: #cd763c; font-weight: bold;">CGI error handle.</h2>

                <br>

                <form action="/cgi/python/inf.py" method="POST">
                    <h2>Infinite CGI, POST method (python CGI).<br><br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Run</button>
                    </div>
                </form>

                <br>

                <form action="/cgi/python/error.py" method="POST">
                    <h2>CGI script contains error, POST method (python CGI).<br><br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Run</button>
                    </div>
                </form>

                <br>

                <form action="/cgi/python/crash.py" method="POST">
                    <h2>CGI script contains crash, POST method (python CGI).<br><br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Run</button>
                    </div>
                </form>

                <br>

                <form action="/cgi/python/empty.py" method="POST">
                    <h2>CGI script returns noting, POST method (python CGI).<br><br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Run</button>
                    </div>
                </form>

                <br>

                <form action="/cgi/php/wrongCgiNoContentType.php" method="POST">
                    <h2>Wrong CGI, no content type, POST method (php CGI).<br><br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Run</button>
                    </div>
                </form>

                <br>

                <form action="/cgi/php/wrongCgiInvalidHead.php" method="POST">
                    <h2>Wrong CGI, invalid head, POST method (php CGI).<br><br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Run</button>
                    </div>
                </form>

                <br>
                
            </details>
        </div>


        <div class="chapter">
            <details>
                <summary class="summary">COOKIE</summary>
                <br>
                <form action="/cgi/python/login.py" method="POST">
                    <h2>Login and set cookie.<br><br></h2>
                    <div class="form-row">
                        <label for="user">User:</label>
                        <input type="text" id="user" name="user" required>
                        <label for="password">Password:</label>
                        <input type="password" id="password" name="password" required>
                    </div>
                    <div class="form-row button-row">
                        <button type="submit">Submit</button>
                    </div>
                </form>

                <br>

                <form action="/cgi/python/loginCheck.py" method="GET">
                    <h2>Login cookie and session check.<br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Check</button>
                    </div>
                </form>

                <br>

                <form action="/cgi/python/userinfo.py" method="GET">
                    <h2>Input something, will be saved in your session.<br></h2>
                    <div class="form-row">
                        <label for="userinfo">Userinfo:</label>
                            <input type="text" id="userinfo" name="userinfo" required>
                    </div>
                    <div class="form-row button-row">
                        <button type="submit">submit</button>
                    </div>
                </form>

                <br>

                <form action="/cgi/python/logout.py" method="GET">
                    <h2>Log out and unset your cookie.<br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Log out</button>
                    </div>
                </form>
                
            </details>
        </div>

        <div class="chapter">
            <details>
                <summary class="summary">CONTACT</summary>

                <div class="contact-section">
                    <p>Copyright Notice
                    All content on this website, including but not limited to text, images, audio, video, and other materials, is owned by yfan and shuwang is protected by copyright law. No part of this website may be reproduced, modified, distributed, or used for commercial purposes without prior authorization.<br> 
                    If you wish to use any content from this site, please contact us.<br>
                    <br>
                    Contact Information<br>
                    Email:  yfan@student.42.fr shuwang@student.42.fr<br></p>
                </div>
            </details>
        </div>

    </body>
</html>
HTTP/1.1 400 Bad Request
Content-Length: 0


===== Test: GET HTTP Method with invalid uri =====
Raw request sent:
GET /Hello World HTTP/1.1
Host: localhost


Response received:
HTTP/1.1 400 Bad Request
Content-Length: 0


===== Test: POST without content-length or chunked =====
Raw request sent:
POST /cgi/php/showbody.php HTTP/1.1
Host: localhost

shuai
Response received:
HTTP/1.1 411 Length Required
Content-Type: text/plain
Content-Language: en-US
Content-Length: 0


===== Test: POST with both content-length and chunked =====
Raw request sent:
POST /cgi/php/showbody.php HTTP/1.1
Host: localhost
Content-Length: 5
Transfer-Encoding: chunked

shuai
Response received:
HTTP/1.1 400 Bad Request
Content-Length: 0


===== Test: POST with exact content-length =====
Raw request sent:
POST /cgi/php/showbody.php HTTP/1.1
Host: localhost
Content-Length: 5

shuai
Response received:
HTTP/1.1 200 OK
Content-Type: text/html
Content-Length: 5

shuaiHTTP/1.1 400 Bad Request
Content-Length: 0


===== Test: POST with content-length too short =====
Raw request sent:
POST /cgi/php/showbody.php HTTP/1.1
Host: localhost
Content-Length: 2

shuai
Response received:
HTTP/1.1 200 OK
Content-Type: text/html
Content-Length: 2

shHTTP/1.1 400 Bad Request
Content-Length: 0


===== Test: POST with content-length larger than max size =====
Raw request sent:
POST /cgi/php/showbody.php HTTP/1.1
Host: localhost
Content-Length: 2000000

shuai
Response received:
HTTP/1.1 413 Payload Too Large
Content-Type: text/plain
Content-Language: en-US
Content-Length: 0


===== Test: POST with content-length larger than max size, overflow =====
Raw request sent:
POST /cgi/php/showbody.php HTTP/1.1
Host: localhost
Content-Length: 2147483648

shuai
Response received:
HTTP/1.1 400 Bad Request
Content-Type: text/plain
Content-Language: en-US
Content-Length: 0


===== Test: POST with content-length 0 =====
Raw request sent:
POST /cgi/php/showbody.php HTTP/1.1
Host: localhost
Content-Length: 0

shuai
Response received:
HTTP/1.1 200 OK
Content-Type: text/html
Content-Length: 0

HTTP/1.1 400 Bad Request
Content-Length: 0


===== Test: POST with content-length negative =====
Raw request sent:
POST /cgi/php/showbody.php HTTP/1.1
Host: localhost
Content-Length: -1

shuai
Response received:
HTTP/1.1 400 Bad Request
Content-Length: 0


===== Test: POST with content-length begin with characters =====
Raw request sent:
POST /cgi/php/showbody.php HTTP/1.1
Host: localhost
Content-Length: ab5

shuai
Response received:
HTTP/1.1 400 Bad Request
Content-Length: 0


===== Test: POST with chunked 1 =====
Raw request sent:
POST /cgi/php/showbody.php HTTP/1.1
Host: localhost
Transfer-Encoding: chunked
Content-Type: text/plain

7
Mozilla
9
Developer
7
Network
0


Response received:
HTTP/1.1 200 OK
Content-Type: text/html
Content-Length: 23

MozillaDeveloperNetworkHTTP/1.1 400 Bad Request
Content-Length: 0


===== Test: POST with chunked 2 =====
Raw request sent:
POST /cgi/php/showbody.php HTTP/1.1
Host: localhost
Transfer-Encoding: chunked
Content-Type: text/plain

c
Mozilla
; ;
9
Developer
7
Network
0


Response received:
HTTP/1.1 200 OK
Content-Type: text/html
Content-Length: 28

Mozilla
; ;DeveloperNetworkHTTP/1.1 400 Bad Request
Content-Length: 0


===== Test: GET /cgi/python/showenv.py, with pathinfo and querystring return autoindex =====
Raw request sent:
GET /cgi/python/showenv.py/data/comment?userinfo=hello HTTP/1.1
Host: localhost

Response received:
HTTP/1.1 200 OK
Content-Type: text/plain; charset=UTF-8
Content-Length: 398

GATEWAY_INTERFACE=CGI/1.1
HTTP_HOST=localhost
LC_CTYPE=C.UTF-8
PATH_INFO=/data/comment
PATH_TRANSLATED=/home/kfreyer/workspace/webserv/kay_test/site/web1/data/comment
QUERY_STRING=userinfo=hello
REMOTE_ADDR=127.0.0.1
REQUEST_METHOD=GET
SCRIPT_NAME=/cgi/python/showenv.py
SERVER_NAME=localhost
SERVER_PORT=8080
SERVER_PROTOCOL=HTTP/1.1
UPLOAD_PATH=/home/kfreyer/workspace/webserv/kay_test/site/web1

===== Test: GET / =====
Raw request sent:
GET / HTTP/1.1
Host: localhost

Response received:
HTTP/1.1 200 OK
Content-Type: text/html
Content-Language: en-US
Content-Length: 22044

<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="utf-8">
        <link rel="stylesheet" type="text/css" href="style.css">
        <title>webserv</title>
    </head>
    <body>
        <h1>42::WEBSERV</h1>
        <img class="main-image" src="assets/section.jpg" alt="cub3d1">
        <br>
        <div class="chapter">
            <details open>
                <summary class="summary">ABOUT</summary>
                <p>
                    Webserv is a lightweight HTTP server built from scratch, following the HTTP/1.1 standard. This project provided hands-on experience in socket programming, HTTP request parsing, and response generation. We implemented key features such as handling GET, POST, and DELETE methods, managing headers, serving static files, and executing CGI scripts for dynamic content. Using epoll(), we ensured efficient connection handling and scalability. Developing Webserv deepened our understanding of networking, concurrency, and performance optimization while reinforcing our ability to build robust and scalable server applications.
                </p>
            </details>
        </div>
        
        <div class="chapter">
            <details>
                <summary class="summary">TEAM</summary>
                <br>
                <p>
                    We are a team with diverse backgrounds in architecture, philosophy of science, and geology, bringing a unique blend of analytical thinking, creativity, and problem-solving to software development. Our varied expertise allows us to approach challenges from multiple perspectives, designing efficient, well-structured, and innovative solutions.
                </p>
                <br>
                <div class="team">
                    <div>
                        <h2>shuwang</h2>
                        <p>Former architect with a passion for coding and design. Enthusiastic about problem-solving, system architecture, and exploring the creative potential of technology. Constantly learning and building at the intersection of logic and creativity.</p>
                    </div>

                    <div>
                        <h2>yfan</h2>
                        <p>Grounded in geology and philosophy, driven by a deep passion for logic and systems. A sharp-minded student mastering low-level and high-level programming alike. Thinks like a theorist, builds like an engineer â€” always learning, always one step ahead.</p>
                    </div>

                </div>
            </details>
        </div>
        
        <div class="chapter">
            <details>
                <summary class="summary">CODING</summary>

                <br>
                <p>
                    Here are some student projects we developed at Ecole42, showcasing our hands-on experience, collaboration, and problem-solving skills. Our work covered system programming, web development, and computer graphics. Through these projects, we gained expertise in low-level programming, process management, networking, concurrency, and 3D rendering, allowing us to build robust and efficient software solutions.
                </p>
            
                <div class="container">

                    <div class="project-block">
                        <div>
                                <img src="assets/webserv.jpg" alt="Third Image">
                        </div>

                        <div class="text-container">
                        <h2>webserv(2025)</h2>
                        <p class="text-project">Cub3D is a 3D raycasting game engine that allows players to navigate through a 3D environment. It implements algorithms to render 3D scenes in a 2D space, similar to how older first-person games like Wolfenstein 3D worked.</p>
                        </div>
                    </div>

                    <div class="project-block">
                        <div>
                            <a href="https://github.com/swangarch/cub3d" target="_blank" rel="noopener noreferrer">
                                <img src="assets/1.png" alt="First Image">
                            </a>
                        </div>

                        <div class="text-container">
                        <h2>cub3d(2024)</h2>
                        <p class="text-project">Cub3D is a 3D raycasting game engine that allows players to navigate through a 3D environment. It implements algorithms to render 3D scenes in a 2D space, similar to how older first-person games like Wolfenstein 3D worked.</p>
                        </div>
                    </div>

                    <div class="project-block">
                        <div>
                            <a href="https://github.com/swangarch/cub3d" target="_blank" rel="noopener noreferrer">
                                <img src="assets/2.png" alt="Second Image">
                            </a>
                        </div>

                        <div class="text-container">
                        <h2>cub3d(2024)</h2>
                        <p class="text-project">Cub3D is a 3D raycasting game engine that allows players to navigate through a 3D environment. It implements algorithms to render 3D scenes in a 2D space, similar to how older first-person games like Wolfenstein 3D worked.</p>
                        </div>
                    </div>
                        
                    

                    <div class="project-block">
                        <div>
                            <a href="https://github.com/swangarch/minishell" target="_blank" rel="noopener noreferrer">
                                <img src="assets/minishell.jpg" alt="Fourth Image">
                            </a>
                        </div>
                        
                        <div class="text-container">
                        <h2>minishell(2024)</h2>
                        <p class="text-project">Minishell is a shell implementation project at Ecole42. It involves parsing user commands, handling built-in functions, and managing process execution, signals, and redirections, closely mimicking a real Unix shell.</p>
                        </div>
                    </div>

                    <div class="project-block">
                        <div>
                            <a href="https://github.com/swangarch/so_long" target="_blank" rel="noopener noreferrer">
                                <img src="assets/4.png" alt="Fourth Image">
                            </a>
                        </div>
                        
                        <div class="text-container">
                        <h2>so_long(2024)</h2>
                        <p class="text-project">SoLong is a graphical game project developed as part of the Ecole42 curriculum. It uses the MiniLibX library and focuses on implementing a 2D game environment where players can navigate through a maze.</p>
                        </div>
                    </div>

                    <div class="project-block">
                        <div>
                            <a href="https://github.com/swangarch/push_swap" target="_blank" rel="noopener noreferrer">
                                <img src="assets/push_swap.jpg" alt="Fourth Image">
                            </a>
                        </div>
                        
                        <div class="text-container">
                        <h2>push_swap(2024)</h2>
                        <p class="text-project">Push_swap is an algorithmic project from the Ecole42 curriculum. The goal is to sort a stack of numbers using a limited set of operations while optimizing for the least number of moves.</p>
                        </div>
                    </div>

                </div>
            </details>
        </div>
        
        <div class="chapter">
            <details>
                <summary class="summary">SERVER</summary>
                <br>

                <p>
                    Our webserv tester is a dedicated platform for testing and evaluating the functionality of the Webserv HTTP server. It provides a simple environment to simulate different web requests, test server responses, and ensure the proper handling of various HTTP methods and features. The site helps verify the server's performance, scalability, and accuracy, offering an easy way to validate and troubleshoot server configurations.
                </p>

                <h2 style="color: #cd763c; font-weight: bold;">GET method.</h2>

                <form action="/" method="GET">
                    <h2>Go to /, return index.<br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Go</button>
                    </div>
                </form>

                <br>

                <form action="/data/" method="GET">
                    <h2>Go to /data, return autoindex.<br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Go</button>
                    </div>
                </form>

                <br>

                <form action="/assets/" method="GET">
                    <h2>Go to /assets, autoindex not allowed return 403.<br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Go</button>
                    </div>
                </form>

                <br>

                <form action="/notexist" method="GET">
                    <h2>Go to /notexist, return 404.<br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Go</button>
                    </div>
                </form>

                <br>

                <form action="/assets/notexist" method="GET">
                    <h2>Go to /assets/notexist, return default error 404.<br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Go</button>
                    </div>
                </form>

                <br>

                <form action="/getnotallowed" method="GET">
                    <h2>Go to /getnotallowed, return default error 405.<br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Go</button>
                    </div>
                </form>

                <br>

                <h2 style="color: #cd763c; font-weight: bold;">POST method.</h2>
                <form action="/upload" method="POST" enctype="multipart/form-data">
                    <h2>Upload a file, POST method (built-in).<br><br></h2>
                    <div class="form-row">
                        <label for="uploadfile1">File:</label>
                        <input type="file" id="uploadfile1" name="file1" required>
                    </div>
                    <div class="form-row button-row">
                        <button type="submit">Submit</button>
                    </div>
                </form>

                <br>
                <h2 style="color: #cd763c; font-weight: bold;">DELETE method.</h2>
                <form>
                    <h2>Delete file or directory, DELETE method (built-in).</h2>
                    <div class="form-row">
                        <input type="text" id="fileDeleteNew" placeholder="File to delete">
                    </div>
                    
                    <div class="form-row button-row">
                        <button type="button" onclick="deleteFile()">Delete</button>
                        <script src = deleterequest.js></script>
                    </div>
                </form>

                <br>

                <h2 style="color: #cd763c; font-weight: bold;">Redirection.</h2>

                <form action="/redir" method="GET">
                    <h2>Redirection /redir -> /data with autoIndex.<br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Go</button>
                    </div>
                </form>

                <br>

                <form action="/redirexample" method="GET">
                    <h2>Redirection /redirexample -> example.com.<br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Go</button>
                    </div>
                </form>

                <br>
                
            </details>
        </div>

        <div class="chapter">
            <details>
                <summary class="summary">CGI</summary>
                <br>
                <h2 style="color: #cd763c; font-weight: bold;">Python CGI.</h2>
                <form action="/cgi/python/comment.py" method="GET">
                    <h2>Leave a comment, GET method (python CGI).<br><br></h2>
                    <div class="form-row">
                        <label for="name">Name:</label>
                        <input type="text" id="name" name="name" required>
                        <label for="email">Email:</label>
                        <input type="email" id="email" name="email" required>
                    </div>
                    <div class="form-row">
                        <label for="comment">Comment:</label>
                        <input id="comment" name="comment" required>
                    </div>
                    <div class="form-row button-row">
                        <button type="submit">Submit</button>
                    </div>
                </form>

                <br>

                <form action="/cgi/python/show_comment.py" method="GET">
                    <h2>Show all comments, GET method (python CGI).<br><br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Show</button>
                    </div>
                </form>

                <br>

                <form action="/cgi/python/upload.py" method="POST" enctype="multipart/form-data">
                    <h2>Upload a file, POST method (python CGI).<br><br></h2>
                    <div class="form-row">

                        <label for="uploadfile">File:</label>
                        <input type="file" id="uploadfile" name="file" required>
                    </div>
                    <div class="form-row button-row">
                        <button type="submit">Submit</button>
                    </div>
                </form>

                <br>

                <form>
                    <h2>Delete datas, DELETE method (python CGI).</h2>
                    <div class="form-row">
                        <button type="button" onclick="sendDeleteRequest('comments')">Delete comments</button>
                        <button type="button" onclick="sendDeleteRequest('files')">Delete files</button>
                        <button type="button" onclick="sendDeleteRequest('all')">Delete all data</button>
                    </div>
                </form>
                
                <script>
                    function sendDeleteRequest(fileType) {
                        fetch(`/cgi/python/delete.py?files=${fileType}`, {
                            method: 'DELETE'
                        }).then(response => {
                            if (response.ok) {
                                alert(`Successfully deleted: ${fileType}`);
                            } else {
                                alert('Error deleting data');
                            }
                        }).catch(error => {
                            console.error('Error:', error);
                        });
                    }
                </script>

                <br>
                <h2 style="color: #cd763c; font-weight: bold;">Php CGI.</h2>

                <form action="/cgi/php/echo.php" method="POST">
                    <h2>Test CGI, show what you enter, POST method (Php CGI).<br><br></h2>
                    <div class="form-row">
                        <label for="content">Content:</label>
                        <input type="text" id="content" name="content" required>
                    </div> 
                    <div class="form-row button-row">
                        <button type="submit">Submit</button>
                    </div>
                </form>

                <br>

                <form action="/cgi/php/game.php" method="POST">
                    <h2>Play a game, enter your choice between 'rock' 'paper' 'scissors' (Php CGI).<br><br></h2>
                    <div class="form-row">
                        <label for="content">Choice:</label>
                        <input type="text" id="content" name="content" required>
                    </div> 
                    <div class="form-row button-row">
                        <button type="submit">Submit</button>
                    </div>
                </form>

                <br>

                

                <h2 style="color: #cd763c; font-weight: bold;">CGI error handle.</h2>

                <br>

                <form action="/cgi/python/inf.py" method="POST">
                    <h2>Infinite CGI, POST method (python CGI).<br><br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Run</button>
                    </div>
                </form>

                <br>

                <form action="/cgi/python/error.py" method="POST">
                    <h2>CGI script contains error, POST method (python CGI).<br><br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Run</button>
                    </div>
                </form>

                <br>

                <form action="/cgi/python/crash.py" method="POST">
                    <h2>CGI script contains crash, POST method (python CGI).<br><br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Run</button>
                    </div>
                </form>

                <br>

                <form action="/cgi/python/empty.py" method="POST">
                    <h2>CGI script returns noting, POST method (python CGI).<br><br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Run</button>
                    </div>
                </form>

                <br>

                <form action="/cgi/php/wrongCgiNoContentType.php" method="POST">
                    <h2>Wrong CGI, no content type, POST method (php CGI).<br><br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Run</button>
                    </div>
                </form>

                <br>

                <form action="/cgi/php/wrongCgiInvalidHead.php" method="POST">
                    <h2>Wrong CGI, invalid head, POST method (php CGI).<br><br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Run</button>
                    </div>
                </form>

                <br>
                
            </details>
        </div>


        <div class="chapter">
            <details>
                <summary class="summary">COOKIE</summary>
                <br>
                <form action="/cgi/python/login.py" method="POST">
                    <h2>Login and set cookie.<br><br></h2>
                    <div class="form-row">
                        <label for="user">User:</label>
                        <input type="text" id="user" name="user" required>
                        <label for="password">Password:</label>
                        <input type="password" id="password" name="password" required>
                    </div>
                    <div class="form-row button-row">
                        <button type="submit">Submit</button>
                    </div>
                </form>

                <br>

                <form action="/cgi/python/loginCheck.py" method="GET">
                    <h2>Login cookie and session check.<br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Check</button>
                    </div>
                </form>

                <br>

                <form action="/cgi/python/userinfo.py" method="GET">
                    <h2>Input something, will be saved in your session.<br></h2>
                    <div class="form-row">
                        <label for="userinfo">Userinfo:</label>
                            <input type="text" id="userinfo" name="userinfo" required>
                    </div>
                    <div class="form-row button-row">
                        <button type="submit">submit</button>
                    </div>
                </form>

                <br>

                <form action="/cgi/python/logout.py" method="GET">
                    <h2>Log out and unset your cookie.<br></h2>
                    <div class="form-row button-row">
                        <button type="submit">Log out</button>
                    </div>
                </form>
                
            </details>
        </div>

        <div class="chapter">
            <details>
                <summary class="summary">CONTACT</summary>

                <div class="contact-section">
                    <p>Copyright Notice
                    All content on this website, including but not limited to text, images, audio, video, and other materials, is owned by yfan and shuwang is protected by copyright law. No part of this website may be reproduced, modified, distributed, or used for commercial purposes without prior authorization.<br> 
                    If you wish to use any content from this site, please contact us.<br>
                    <br>
                    Contact Information<br>
                    Email:  yfan@student.42.fr shuwang@student.42.fr<br></p>
                </div>
            </details>
        </div>

    </body>
</html>

===== Test: GET /data return autoindex =====
Raw request sent:
GET /data HTTP/1.1
Host: localhost

Response received:
HTTP/1.1 200 OK
Content-Type: text/html
Content-Language: en-US
Content-Length: 193

<!DOCTYPE html>
<html><head><title>Index of /data</title></head><body>
<h1>Index of /data</h1><ul>
<li><a href="files/">files/</a></li>
<li><a href="users/">users/</a></li>
</ul></body></html>

===== Test: GET /assets autoindex not allowed, return 403 =====
Raw request sent:
GET /assets HTTP/1.1
Host: localhost

Response received:
HTTP/1.1 403 Forbidden
Content-Type: text/plain
Content-Language: en-US
Content-Length: 0


===== Test: GET /notexist, return 404 =====
Raw request sent:
GET /notexist HTTP/1.1
Host: localhost

Response received:
HTTP/1.1 404 Not Found
Content-Type: text/plain
Content-Language: en-US
Content-Length: 0


===== Test: GET /assets/notexist, return default 404 =====
Raw request sent:
GET /assets/notexist HTTP/1.1
Host: localhost

Response received:
HTTP/1.1 404 Not Found
Content-Type: text/plain
Content-Language: en-US
Content-Length: 0


===== Test: GET /getnotallowed, return default 405 =====
Raw request sent:
GET /getnotallowed HTTP/1.1
Host: localhost

Response received:
HTTP/1.1 405 Method Not Allowed
Content-Type: text/plain
Content-Language: en-US
Content-Length: 0


===== Test: DELETE /notexist, return default 404 =====
Raw request sent:
DELETE /notexist HTTP/1.1
Host: localhost

Response received:
HTTP/1.1 404 Not Found
Content-Type: text/plain
Content-Language: en-US
Content-Length: 0


===== Test: DELETE /assets, where DELETE not allowed, return default 405 =====
Raw request sent:
DELETE /assets HTTP/1.1
Host: localhost

Response received:
HTTP/1.1 405 Method Not Allowed
Content-Type: text/plain
Content-Language: en-US
Content-Length: 0


===== Test: DELETE /assets/1.png, where DELETE not allowed, return default 405 =====
Raw request sent:
DELETE /assets/1.png HTTP/1.1
Host: localhost

Response received:
HTTP/1.1 405 Method Not Allowed
Content-Type: text/plain
Content-Language: en-US
Content-Length: 0


===== Test: DELETE /hello.test, return 204 =====
Raw request sent:
DELETE /hello.test HTTP/1.1
Host: localhost

Response received:
HTTP/1.1 204 No Content
Content-Language: en-US
Content-Length: 0


===== Test: GET /redir, redirect to /data, return 308 =====
Raw request sent:
GET /redir HTTP/1.1
Host: localhost

Response received:
HTTP/1.1 308 Permanent Redirect
Content-Language: en-US
location: /data
Content-Length: 0


===== Test: GET /redirexample, redirect to example.com, return 307 =====
Raw request sent:
GET /redirexample HTTP/1.1
Host: localhost

Response received:
HTTP/1.1 307 Temporary Redirect
Content-Language: en-US
location: https://example.com/
Content-Length: 0


===== Test: GET /a>{}, invalid uri character, return 400 =====
Raw request sent:
GET /a>{} HTTP/1.1
Host: localhost

Response received:
HTTP/1.1 400 Bad Request
Content-Type: text/plain
Content-Language: en-US
Content-Length: 0


===== Test: GET with .. in uri, return 403 =====
Raw request sent:
GET /.. HTTP/1.1
Host: localhost

Response received:
HTTP/1.1 403 Forbidden
Content-Type: text/plain
Content-Language: en-US
Content-Length: 0


===== Test: POST, repeat content length., return 400 =====
Raw request sent:
POST /upload HTTP/1.1
Host: localhost
Content-Length: 0
Content-Length: 1


Response received:
HTTP/1.1 400 Bad Request
Content-Length: 0


===== Test: POST, repeat content type., return 400 =====
Raw request sent:
POST /upload HTTP/1.1
Host: localhost
Content-Length: 0
Content-Type: text/html
Content-Type: text/html


Response received:
HTTP/1.1 400 Bad Request
Content-Length: 0


===== Test: POST script not exist, return 404 =====
Raw request sent:
POST /cgi/python/notexist.py HTTP/1.1
Host: localhost
Content-Length: 0


Response received:
HTTP/1.1 404 Not Found
Content-Type: text/plain
Content-Language: en-US
Content-Length: 0


===== Test: POST script contain error in stderr =====
Raw request sent:
POST /cgi/python/error.py HTTP/1.1
Host: localhost
Content-Length: 0

Response received:
HTTP/1.1 502 Bad Gateway
Content-Type: text/plain
Content-Language: en-US
Content-Length: 0


===== Test: POST script contain segmentation fault =====
Raw request sent:
POST /cgi/python/crash.py HTTP/1.1
Host: localhost
Content-Length: 0


Response received:
HTTP/1.1 502 Bad Gateway
Content-Type: text/plain
Content-Language: en-US
Content-Length: 0


===== Test: POST script return nothing =====
Raw request sent:
POST /cgi/python/empty.py HTTP/1.1
Host: localhost
Content-Length: 0


Response received:
HTTP/1.1 500 Internal Server Error
Content-Type: text/plain
Content-Language: en-US
Content-Length: 0


===== Test: POST script doesn't have content type =====
Raw request sent:
POST /cgi/php/wrongCgiNoContentType.php HTTP/1.1
Host: localhost
Content-Length: 0


Response received:
HTTP/1.1 500 Internal Server Error
Content-Type: text/plain
Content-Language: en-US
Content-Length: 0


===== Test: POST script have invalid head =====
Raw request sent:
POST /cgi/php/wrongCgiInvalidHead.php HTTP/1.1
Host: localhost
Content-Length: 0


Response received:
HTTP/1.1 200 NOT
Content-Type: text/html
set-cookie: user=abc; Path=/; Max-Age=12312312
Content-Length: 167

<html><h1 style="text-align: center; font-family: Arial, sans-serif; font-size: 25px; color: black;">Php cgi hello world.<br><br><a href="/">Return to Home</h1></html>HTTP/1.1 400 Bad Request
Content-Length: 0

